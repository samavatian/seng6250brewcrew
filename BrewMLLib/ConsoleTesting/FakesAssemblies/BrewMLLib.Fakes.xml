<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BrewMLLib.Fakes</name>
    </assembly>
    <members>
        <member name="T:BrewMLLib.DAL.Fakes.ShimBrewDBContext">
            <summary>Shim type of BrewMLLib.DAL.BrewDBContext</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.ShimBrewDBContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.ShimBrewDBContext.#ctor(BrewMLLib.DAL.BrewDBContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.ShimBrewDBContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.ShimBrewDBContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.ShimBrewDBContext.Bind(System.Data.Entity.Infrastructure.IObjectContextAdapter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.ShimBrewDBContext.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AddEQControlLoopToPlantInt32EQControlLoop">
            <summary>Sets the shim of BrewDBContext.AddEQControlLoopToPlant(Int32 plantID, EQControlLoop loop)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AddMasterRecipeToPlantInt32Int32">
            <summary>Sets the shim of BrewDBContext.AddMasterRecipeToPlant(Int32 plantID, Int32 masterRecipeID)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.BatchsGet">
            <summary>Sets the shim of BrewDBContext.get_Batchs()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.BatchsSetDbSetOfBatch">
            <summary>Sets the shim of BrewDBContext.set_Batchs(DbSet`1&lt;Batch&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.CollectionOfTestEntitiesGet">
            <summary>Sets the shim of BrewDBContext.get_CollectionOfTestEntities()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.CollectionOfTestEntitiesSetDbSetOfCollectionOfTestEntitie">
            <summary>Sets the shim of BrewDBContext.set_CollectionOfTestEntities(DbSet`1&lt;CollectionOfTestEntitie&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.Constructor">
            <summary>Sets the shim of BrewDBContext.BrewDBContext()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.EQAddPlantPlant">
            <summary>Sets the shim of BrewDBContext.EQAddPlant(Plant newplant)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.EQAuxilarysGet">
            <summary>Sets the shim of BrewDBContext.get_EQAuxilarys()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.EQAuxilarysSetDbSetOfEQAuxilary">
            <summary>Sets the shim of BrewDBContext.set_EQAuxilarys(DbSet`1&lt;EQAuxilary&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.EQControlLoopsGet">
            <summary>Sets the shim of BrewDBContext.get_EQControlLoops()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.EQControlLoopsSetDbSetOfEQControlLoop">
            <summary>Sets the shim of BrewDBContext.set_EQControlLoops(DbSet`1&lt;EQControlLoop&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.EQTypesGet">
            <summary>Sets the shim of BrewDBContext.get_EQTypes()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.EQTypesSetDbSetOfEQType">
            <summary>Sets the shim of BrewDBContext.set_EQTypes(DbSet`1&lt;EQType&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.EQUnitOperationsGet">
            <summary>Sets the shim of BrewDBContext.get_EQUnitOperations()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.EQUnitOperationsSetDbSetOfEQUnitOperation">
            <summary>Sets the shim of BrewDBContext.set_EQUnitOperations(DbSet`1&lt;EQUnitOperation&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.EQVesselsGet">
            <summary>Sets the shim of BrewDBContext.get_EQVessels()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.EQVesselsSetDbSetOfEQVessel">
            <summary>Sets the shim of BrewDBContext.set_EQVessels(DbSet`1&lt;EQVessel&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.GetEQControlLoopsByPlantIDInt32">
            <summary>Sets the shim of BrewDBContext.GetEQControlLoopsByPlantID(Int32 plantID)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.GetEQControlLoopsByPlantPlant">
            <summary>Sets the shim of BrewDBContext.GetEQControlLoopsByPlant(Plant plant)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.GetMasterRecipeByPlantInt32">
            <summary>Sets the shim of BrewDBContext.GetMasterRecipeByPlant(Int32 plantID)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.GetPlantByPlantIDInt32">
            <summary>Sets the shim of BrewDBContext.GetPlantByPlantID(Int32 plantID)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.GetPlants">
            <summary>Sets the shim of BrewDBContext.GetPlants()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.IngredientTypesGet">
            <summary>Sets the shim of BrewDBContext.get_IngredientTypes()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.IngredientTypesSetDbSetOfIngredientType">
            <summary>Sets the shim of BrewDBContext.set_IngredientTypes(DbSet`1&lt;IngredientType&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.IngredientsGet">
            <summary>Sets the shim of BrewDBContext.get_Ingredients()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.IngredientsSetDbSetOfIngredient">
            <summary>Sets the shim of BrewDBContext.set_Ingredients(DbSet`1&lt;Ingredient&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.MasterRecipesGet">
            <summary>Sets the shim of BrewDBContext.get_MasterRecipes()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.MasterRecipesSetDbSetOfMasterRecipe">
            <summary>Sets the shim of BrewDBContext.set_MasterRecipes(DbSet`1&lt;MasterRecipe&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.OnModelCreatingDbModelBuilder">
            <summary>Sets the shim of BrewDBContext.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.PlantsGet">
            <summary>Sets the shim of BrewDBContext.get_Plants()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.PlantsSetDbSetOfPlant">
            <summary>Sets the shim of BrewDBContext.set_Plants(DbSet`1&lt;Plant&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.RecUnitOperationsGet">
            <summary>Sets the shim of BrewDBContext.get_RecUnitOperations()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.RecUnitOperationsSetDbSetOfRecUnitOperation">
            <summary>Sets the shim of BrewDBContext.set_RecUnitOperations(DbSet`1&lt;RecUnitOperation&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.TestEntitieTwosGet">
            <summary>Sets the shim of BrewDBContext.get_TestEntitieTwos()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.TestEntitieTwosSetDbSetOfTestEntitieTwo">
            <summary>Sets the shim of BrewDBContext.set_TestEntitieTwos(DbSet`1&lt;TestEntitieTwo&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.TestEntitiesGet">
            <summary>Sets the shim of BrewDBContext.get_TestEntities()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.TestEntitiesSetDbSetOfTestEntitie">
            <summary>Sets the shim of BrewDBContext.set_TestEntities(DbSet`1&lt;TestEntitie&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.TransitionsGet">
            <summary>Sets the shim of BrewDBContext.get_Transitions()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.TransitionsSetDbSetOfTransition">
            <summary>Sets the shim of BrewDBContext.set_Transitions(DbSet`1&lt;Transition&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.UnitsGet">
            <summary>Sets the shim of BrewDBContext.get_Units()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.UnitsSetDbSetOfUnit">
            <summary>Sets the shim of BrewDBContext.set_Units(DbSet`1&lt;Unit&gt; value)</summary>
        </member>
        <member name="T:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.AddEQControlLoopToPlantInt32EQControlLoop">
            <summary>Sets the shim of BrewDBContext.AddEQControlLoopToPlant(Int32 plantID, EQControlLoop loop)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.AddMasterRecipeToPlantInt32Int32">
            <summary>Sets the shim of BrewDBContext.AddMasterRecipeToPlant(Int32 plantID, Int32 masterRecipeID)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.BatchsGet">
            <summary>Sets the shim of BrewDBContext.get_Batchs()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.BatchsSetDbSetOfBatch">
            <summary>Sets the shim of BrewDBContext.set_Batchs(DbSet`1&lt;Batch&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.CollectionOfTestEntitiesGet">
            <summary>Sets the shim of BrewDBContext.get_CollectionOfTestEntities()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.CollectionOfTestEntitiesSetDbSetOfCollectionOfTestEntitie">
            <summary>Sets the shim of BrewDBContext.set_CollectionOfTestEntities(DbSet`1&lt;CollectionOfTestEntitie&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.EQAddPlantPlant">
            <summary>Sets the shim of BrewDBContext.EQAddPlant(Plant newplant)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.EQAuxilarysGet">
            <summary>Sets the shim of BrewDBContext.get_EQAuxilarys()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.EQAuxilarysSetDbSetOfEQAuxilary">
            <summary>Sets the shim of BrewDBContext.set_EQAuxilarys(DbSet`1&lt;EQAuxilary&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.EQControlLoopsGet">
            <summary>Sets the shim of BrewDBContext.get_EQControlLoops()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.EQControlLoopsSetDbSetOfEQControlLoop">
            <summary>Sets the shim of BrewDBContext.set_EQControlLoops(DbSet`1&lt;EQControlLoop&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.EQTypesGet">
            <summary>Sets the shim of BrewDBContext.get_EQTypes()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.EQTypesSetDbSetOfEQType">
            <summary>Sets the shim of BrewDBContext.set_EQTypes(DbSet`1&lt;EQType&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.EQUnitOperationsGet">
            <summary>Sets the shim of BrewDBContext.get_EQUnitOperations()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.EQUnitOperationsSetDbSetOfEQUnitOperation">
            <summary>Sets the shim of BrewDBContext.set_EQUnitOperations(DbSet`1&lt;EQUnitOperation&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.EQVesselsGet">
            <summary>Sets the shim of BrewDBContext.get_EQVessels()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.EQVesselsSetDbSetOfEQVessel">
            <summary>Sets the shim of BrewDBContext.set_EQVessels(DbSet`1&lt;EQVessel&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.GetEQControlLoopsByPlantIDInt32">
            <summary>Sets the shim of BrewDBContext.GetEQControlLoopsByPlantID(Int32 plantID)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.GetEQControlLoopsByPlantPlant">
            <summary>Sets the shim of BrewDBContext.GetEQControlLoopsByPlant(Plant plant)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.GetMasterRecipeByPlantInt32">
            <summary>Sets the shim of BrewDBContext.GetMasterRecipeByPlant(Int32 plantID)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.GetPlantByPlantIDInt32">
            <summary>Sets the shim of BrewDBContext.GetPlantByPlantID(Int32 plantID)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.GetPlants">
            <summary>Sets the shim of BrewDBContext.GetPlants()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.IngredientTypesGet">
            <summary>Sets the shim of BrewDBContext.get_IngredientTypes()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.IngredientTypesSetDbSetOfIngredientType">
            <summary>Sets the shim of BrewDBContext.set_IngredientTypes(DbSet`1&lt;IngredientType&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.IngredientsGet">
            <summary>Sets the shim of BrewDBContext.get_Ingredients()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.IngredientsSetDbSetOfIngredient">
            <summary>Sets the shim of BrewDBContext.set_Ingredients(DbSet`1&lt;Ingredient&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.MasterRecipesGet">
            <summary>Sets the shim of BrewDBContext.get_MasterRecipes()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.MasterRecipesSetDbSetOfMasterRecipe">
            <summary>Sets the shim of BrewDBContext.set_MasterRecipes(DbSet`1&lt;MasterRecipe&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.OnModelCreatingDbModelBuilder">
            <summary>Sets the shim of BrewDBContext.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.PlantsGet">
            <summary>Sets the shim of BrewDBContext.get_Plants()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.PlantsSetDbSetOfPlant">
            <summary>Sets the shim of BrewDBContext.set_Plants(DbSet`1&lt;Plant&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.RecUnitOperationsGet">
            <summary>Sets the shim of BrewDBContext.get_RecUnitOperations()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.RecUnitOperationsSetDbSetOfRecUnitOperation">
            <summary>Sets the shim of BrewDBContext.set_RecUnitOperations(DbSet`1&lt;RecUnitOperation&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.TestEntitieTwosGet">
            <summary>Sets the shim of BrewDBContext.get_TestEntitieTwos()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.TestEntitieTwosSetDbSetOfTestEntitieTwo">
            <summary>Sets the shim of BrewDBContext.set_TestEntitieTwos(DbSet`1&lt;TestEntitieTwo&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.TestEntitiesGet">
            <summary>Sets the shim of BrewDBContext.get_TestEntities()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.TestEntitiesSetDbSetOfTestEntitie">
            <summary>Sets the shim of BrewDBContext.set_TestEntities(DbSet`1&lt;TestEntitie&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.TransitionsGet">
            <summary>Sets the shim of BrewDBContext.get_Transitions()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.TransitionsSetDbSetOfTransition">
            <summary>Sets the shim of BrewDBContext.set_Transitions(DbSet`1&lt;Transition&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.UnitsGet">
            <summary>Sets the shim of BrewDBContext.get_Units()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimBrewDBContext.AllInstances.UnitsSetDbSetOfUnit">
            <summary>Sets the shim of BrewDBContext.set_Units(DbSet`1&lt;Unit&gt; value)</summary>
        </member>
        <member name="T:BrewMLLib.DAL.Fakes.ShimControlLoopActions">
            <summary>Shim type of BrewMLLib.DAL.ControlLoopActions</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.ShimControlLoopActions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.ShimControlLoopActions.#ctor(BrewMLLib.DAL.ControlLoopActions)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.ShimControlLoopActions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.ShimControlLoopActions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.ShimControlLoopActions.Bind(BrewMLLib.DAL.IControlLoopActions)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimControlLoopActions.AsTypeString">
            <summary>Sets the shim of ControlLoopActions.AsType(String name)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimControlLoopActions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimControlLoopActions.ConstructorPlant">
            <summary>Sets the shim of ControlLoopActions.ControlLoopActions(Plant p)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimControlLoopActions.Final">
            <summary>Sets the shim of ControlLoopActions.Final()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimControlLoopActions.WithNameString">
            <summary>Sets the shim of ControlLoopActions.WithName(String name)</summary>
        </member>
        <member name="T:BrewMLLib.DAL.Fakes.ShimControlLoopActions.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimControlLoopActions.AllInstances.AsTypeString">
            <summary>Sets the shim of ControlLoopActions.AsType(String name)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimControlLoopActions.AllInstances.Final">
            <summary>Sets the shim of ControlLoopActions.Final()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimControlLoopActions.AllInstances.WithNameString">
            <summary>Sets the shim of ControlLoopActions.WithName(String name)</summary>
        </member>
        <member name="T:BrewMLLib.DAL.Fakes.ShimPlantActions">
            <summary>Shim type of BrewMLLib.DAL.PlantActions</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.ShimPlantActions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.ShimPlantActions.#ctor(BrewMLLib.DAL.PlantActions)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.ShimPlantActions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.ShimPlantActions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.ShimPlantActions.Bind(BrewMLLib.DAL.IPlantActions)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimPlantActions.AddLoop">
            <summary>Sets the shim of PlantActions.AddLoop()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimPlantActions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimPlantActions.Constructor">
            <summary>Sets the shim of PlantActions.PlantActions()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimPlantActions.Final">
            <summary>Sets the shim of PlantActions.Final()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimPlantActions.GetPlant">
            <summary>Sets the shim of PlantActions.GetPlant()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimPlantActions.InPlantString">
            <summary>Sets the shim of PlantActions.InPlant(String name)</summary>
        </member>
        <member name="T:BrewMLLib.DAL.Fakes.ShimPlantActions.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimPlantActions.AllInstances.AddLoop">
            <summary>Sets the shim of PlantActions.AddLoop()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimPlantActions.AllInstances.Final">
            <summary>Sets the shim of PlantActions.Final()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimPlantActions.AllInstances.GetPlant">
            <summary>Sets the shim of PlantActions.GetPlant()</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.ShimPlantActions.AllInstances.InPlantString">
            <summary>Sets the shim of PlantActions.InPlant(String name)</summary>
        </member>
        <member name="T:BrewMLLib.DAL.Fakes.StubBrewDBContext">
            <summary>Stub type of BrewMLLib.DAL.BrewDBContext</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.StubBrewDBContext.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.StubBrewDBContext.Dispose(System.Boolean)">
            <summary>Sets the stub of DbContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:BrewMLLib.DAL.Fakes.StubBrewDBContext.DisposeBoolean">
            <summary>Sets the stub of DbContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.StubBrewDBContext.Equals(System.Object)">
            <summary>Sets the stub of DbContext.Equals(Object obj)</summary>
        </member>
        <member name="F:BrewMLLib.DAL.Fakes.StubBrewDBContext.EqualsObject">
            <summary>Sets the stub of DbContext.Equals(Object obj)</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.StubBrewDBContext.GetHashCode">
            <summary>Sets the stub of DbContext.GetHashCode()</summary>
        </member>
        <member name="F:BrewMLLib.DAL.Fakes.StubBrewDBContext.GetHashCode01">
            <summary>Sets the stub of DbContext.GetHashCode()</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.StubBrewDBContext.InitializeStub">
            <summary>Initializes a new instance of type StubBrewDBContext</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.StubBrewDBContext.OnModelCreating(System.Data.Entity.DbModelBuilder)">
            <summary>Sets the stub of BrewDBContext.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="F:BrewMLLib.DAL.Fakes.StubBrewDBContext.OnModelCreatingDbModelBuilder">
            <summary>Sets the stub of BrewDBContext.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.StubBrewDBContext.SaveChanges">
            <summary>Sets the stub of DbContext.SaveChanges()</summary>
        </member>
        <member name="F:BrewMLLib.DAL.Fakes.StubBrewDBContext.SaveChanges01">
            <summary>Sets the stub of DbContext.SaveChanges()</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.StubBrewDBContext.SaveChangesAsync">
            <summary>Sets the stub of DbContext.SaveChangesAsync()</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.StubBrewDBContext.SaveChangesAsync(System.Threading.CancellationToken)">
            <summary>Sets the stub of DbContext.SaveChangesAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:BrewMLLib.DAL.Fakes.StubBrewDBContext.SaveChangesAsync01">
            <summary>Sets the stub of DbContext.SaveChangesAsync()</summary>
        </member>
        <member name="F:BrewMLLib.DAL.Fakes.StubBrewDBContext.SaveChangesAsyncCancellationToken">
            <summary>Sets the stub of DbContext.SaveChangesAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.StubBrewDBContext.ShouldValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry)">
            <summary>Sets the stub of DbContext.ShouldValidateEntity(DbEntityEntry entityEntry)</summary>
        </member>
        <member name="F:BrewMLLib.DAL.Fakes.StubBrewDBContext.ShouldValidateEntityDbEntityEntry">
            <summary>Sets the stub of DbContext.ShouldValidateEntity(DbEntityEntry entityEntry)</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.StubBrewDBContext.ToString">
            <summary>Sets the stub of DbContext.ToString()</summary>
        </member>
        <member name="F:BrewMLLib.DAL.Fakes.StubBrewDBContext.ToString01">
            <summary>Sets the stub of DbContext.ToString()</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.StubBrewDBContext.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})">
            <summary>Sets the stub of DbContext.ValidateEntity(DbEntityEntry entityEntry, IDictionary`2&lt;Object,Object&gt; items)</summary>
        </member>
        <member name="F:BrewMLLib.DAL.Fakes.StubBrewDBContext.ValidateEntityDbEntityEntryIDictionaryOfObjectObject">
            <summary>Sets the stub of DbContext.ValidateEntity(DbEntityEntry entityEntry, IDictionary`2&lt;Object,Object&gt; items)</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.StubBrewDBContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.StubBrewDBContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.StubBrewDBContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:BrewMLLib.DAL.Fakes.StubControlLoopActions">
            <summary>Stub type of BrewMLLib.DAL.ControlLoopActions</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.StubControlLoopActions.#ctor(BrewMLLib.Models.Plant)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.StubControlLoopActions.InitializeStub">
            <summary>Initializes a new instance of type StubControlLoopActions</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.StubControlLoopActions.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.StubControlLoopActions.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.StubControlLoopActions.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:BrewMLLib.DAL.Fakes.StubIControlLoopActions">
            <summary>Stub type of BrewMLLib.DAL.IControlLoopActions</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.StubIControlLoopActions.#ctor">
            <summary>Initializes a new instance of type StubIControlLoopActions</summary>
        </member>
        <member name="F:BrewMLLib.DAL.Fakes.StubIControlLoopActions.AsTypeString">
            <summary>Sets the stub of IControlLoopActions.AsType(String name)</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.StubIControlLoopActions.bmll::BrewMLLib#DAL#IControlLoopActions#AsType(System.String)">
            <summary>Sets the stub of IControlLoopActions.AsType(String name)</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.StubIControlLoopActions.bmll::BrewMLLib#DAL#IControlLoopActions#Final">
            <summary>Sets the stub of IControlLoopActions.Final()</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.StubIControlLoopActions.bmll::BrewMLLib#DAL#IControlLoopActions#WithName(System.String)">
            <summary>Sets the stub of IControlLoopActions.WithName(String name)</summary>
        </member>
        <member name="F:BrewMLLib.DAL.Fakes.StubIControlLoopActions.Final">
            <summary>Sets the stub of IControlLoopActions.Final()</summary>
        </member>
        <member name="F:BrewMLLib.DAL.Fakes.StubIControlLoopActions.WithNameString">
            <summary>Sets the stub of IControlLoopActions.WithName(String name)</summary>
        </member>
        <member name="T:BrewMLLib.DAL.Fakes.StubIPlantActions">
            <summary>Stub type of BrewMLLib.DAL.IPlantActions</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.StubIPlantActions.#ctor">
            <summary>Initializes a new instance of type StubIPlantActions</summary>
        </member>
        <member name="F:BrewMLLib.DAL.Fakes.StubIPlantActions.AddLoop">
            <summary>Sets the stub of IPlantActions.AddLoop()</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.StubIPlantActions.bmll::BrewMLLib#DAL#IPlantActions#AddLoop">
            <summary>Sets the stub of IPlantActions.AddLoop()</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.StubIPlantActions.bmll::BrewMLLib#DAL#IPlantActions#Final">
            <summary>Sets the stub of IPlantActions.Final()</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.StubIPlantActions.bmll::BrewMLLib#DAL#IPlantActions#GetPlant">
            <summary>Sets the stub of IPlantActions.GetPlant()</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.StubIPlantActions.bmll::BrewMLLib#DAL#IPlantActions#InPlant(System.String)">
            <summary>Sets the stub of IPlantActions.InPlant(String a)</summary>
        </member>
        <member name="F:BrewMLLib.DAL.Fakes.StubIPlantActions.Final">
            <summary>Sets the stub of IPlantActions.Final()</summary>
        </member>
        <member name="F:BrewMLLib.DAL.Fakes.StubIPlantActions.GetPlant">
            <summary>Sets the stub of IPlantActions.GetPlant()</summary>
        </member>
        <member name="F:BrewMLLib.DAL.Fakes.StubIPlantActions.InPlantString">
            <summary>Sets the stub of IPlantActions.InPlant(String a)</summary>
        </member>
        <member name="T:BrewMLLib.DAL.Fakes.StubPlantActions">
            <summary>Stub type of BrewMLLib.DAL.PlantActions</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.StubPlantActions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:BrewMLLib.DAL.Fakes.StubPlantActions.InitializeStub">
            <summary>Initializes a new instance of type StubPlantActions</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.StubPlantActions.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.StubPlantActions.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:BrewMLLib.DAL.Fakes.StubPlantActions.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:BrewMLLib.Fakes.ShimBrewML">
            <summary>Shim type of BrewMLLib.BrewML</summary>
        </member>
        <member name="M:BrewMLLib.Fakes.ShimBrewML.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:BrewMLLib.Fakes.ShimBrewML.#ctor(BrewMLLib.BrewML)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:BrewMLLib.Fakes.ShimBrewML.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:BrewMLLib.Fakes.ShimBrewML.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Fakes.ShimBrewML.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Fakes.ShimBrewML.Constructor">
            <summary>Sets the shim of BrewML.BrewML()</summary>
        </member>
        <member name="T:BrewMLLib.Fakes.ShimBrewML.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:BrewMLLib.Fakes.StubBrewML">
            <summary>Stub type of BrewMLLib.BrewML</summary>
        </member>
        <member name="M:BrewMLLib.Fakes.StubBrewML.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:BrewMLLib.Fakes.StubBrewML.InitializeStub">
            <summary>Initializes a new instance of type StubBrewML</summary>
        </member>
        <member name="P:BrewMLLib.Fakes.StubBrewML.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:BrewMLLib.Fakes.StubBrewML.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:BrewMLLib.Fakes.StubBrewML.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:BrewMLLib.Migrations.Fakes.Shimasdf">
            <summary>Shim type of BrewMLLib.Migrations.asdf</summary>
        </member>
        <member name="M:BrewMLLib.Migrations.Fakes.Shimasdf.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:BrewMLLib.Migrations.Fakes.Shimasdf.#ctor(BrewMLLib.Migrations.asdf)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:BrewMLLib.Migrations.Fakes.Shimasdf.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:BrewMLLib.Migrations.Fakes.Shimasdf.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:BrewMLLib.Migrations.Fakes.Shimasdf.Bind(System.Data.Entity.Migrations.Infrastructure.IDbMigration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:BrewMLLib.Migrations.Fakes.Shimasdf.Bind(System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:BrewMLLib.Migrations.Fakes.Shimasdf.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Migrations.Fakes.Shimasdf.Constructor">
            <summary>Sets the shim of asdf.asdf()</summary>
        </member>
        <member name="P:BrewMLLib.Migrations.Fakes.Shimasdf.Down">
            <summary>Sets the shim of asdf.Down()</summary>
        </member>
        <member name="P:BrewMLLib.Migrations.Fakes.Shimasdf.IdSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of asdf.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Id()</summary>
        </member>
        <member name="P:BrewMLLib.Migrations.Fakes.Shimasdf.SourceSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of asdf.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Source()</summary>
        </member>
        <member name="P:BrewMLLib.Migrations.Fakes.Shimasdf.TargetSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of asdf.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Target()</summary>
        </member>
        <member name="P:BrewMLLib.Migrations.Fakes.Shimasdf.Up">
            <summary>Sets the shim of asdf.Up()</summary>
        </member>
        <member name="T:BrewMLLib.Migrations.Fakes.Shimasdf.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:BrewMLLib.Migrations.Fakes.Shimasdf.AllInstances.Down">
            <summary>Sets the shim of asdf.Down()</summary>
        </member>
        <member name="P:BrewMLLib.Migrations.Fakes.Shimasdf.AllInstances.IdSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of asdf.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Id()</summary>
        </member>
        <member name="P:BrewMLLib.Migrations.Fakes.Shimasdf.AllInstances.SourceSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of asdf.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Source()</summary>
        </member>
        <member name="P:BrewMLLib.Migrations.Fakes.Shimasdf.AllInstances.TargetSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of asdf.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Target()</summary>
        </member>
        <member name="P:BrewMLLib.Migrations.Fakes.Shimasdf.AllInstances.Up">
            <summary>Sets the shim of asdf.Up()</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.ShimBaseEquip">
            <summary>Shim type of BrewMLLib.Models.BaseEquip</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimBaseEquip.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimBaseEquip.#ctor(BrewMLLib.Models.BaseEquip)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimBaseEquip.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimBaseEquip.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBaseEquip.AssetTagGet">
            <summary>Sets the shim of BaseEquip.get_AssetTag()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBaseEquip.AssetTagSetString">
            <summary>Sets the shim of BaseEquip.set_AssetTag(String value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBaseEquip.BaseEquipIDGet">
            <summary>Sets the shim of BaseEquip.get_BaseEquipID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBaseEquip.BaseEquipIDSetInt32">
            <summary>Sets the shim of BaseEquip.set_BaseEquipID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBaseEquip.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBaseEquip.Constructor">
            <summary>Sets the shim of BaseEquip.BaseEquip()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBaseEquip.DescriptionGet">
            <summary>Sets the shim of BaseEquip.get_Description()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBaseEquip.DescriptionSetString">
            <summary>Sets the shim of BaseEquip.set_Description(String value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBaseEquip.EquipNameGet">
            <summary>Sets the shim of BaseEquip.get_EquipName()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBaseEquip.EquipNameSetString">
            <summary>Sets the shim of BaseEquip.set_EquipName(String value)</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.ShimBaseEquip.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBaseEquip.AllInstances.AssetTagGet">
            <summary>Sets the shim of BaseEquip.get_AssetTag()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBaseEquip.AllInstances.AssetTagSetString">
            <summary>Sets the shim of BaseEquip.set_AssetTag(String value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBaseEquip.AllInstances.BaseEquipIDGet">
            <summary>Sets the shim of BaseEquip.get_BaseEquipID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBaseEquip.AllInstances.BaseEquipIDSetInt32">
            <summary>Sets the shim of BaseEquip.set_BaseEquipID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBaseEquip.AllInstances.DescriptionGet">
            <summary>Sets the shim of BaseEquip.get_Description()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBaseEquip.AllInstances.DescriptionSetString">
            <summary>Sets the shim of BaseEquip.set_Description(String value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBaseEquip.AllInstances.EquipNameGet">
            <summary>Sets the shim of BaseEquip.get_EquipName()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBaseEquip.AllInstances.EquipNameSetString">
            <summary>Sets the shim of BaseEquip.set_EquipName(String value)</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.ShimBatch">
            <summary>Shim type of BrewMLLib.Models.Batch</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimBatch.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimBatch.#ctor(BrewMLLib.Models.Batch)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimBatch.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimBatch.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBatch.AllocatedUnitsGet">
            <summary>Sets the shim of Batch.get_AllocatedUnits()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBatch.AllocatedUnitsSetICollectionOfUnit">
            <summary>Sets the shim of Batch.set_AllocatedUnits(ICollection`1&lt;Unit&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBatch.BatchIDGet">
            <summary>Sets the shim of Batch.get_BatchID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBatch.BatchIDSetInt32">
            <summary>Sets the shim of Batch.set_BatchID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBatch.BatchLocationGet">
            <summary>Sets the shim of Batch.get_BatchLocation()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBatch.BatchLocationSetString">
            <summary>Sets the shim of Batch.set_BatchLocation(String value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBatch.BatchNameGet">
            <summary>Sets the shim of Batch.get_BatchName()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBatch.BatchNameSetString">
            <summary>Sets the shim of Batch.set_BatchName(String value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBatch.BatchRecipeGet">
            <summary>Sets the shim of Batch.get_BatchRecipe()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBatch.BatchRecipeSetMasterRecipe">
            <summary>Sets the shim of Batch.set_BatchRecipe(MasterRecipe value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBatch.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBatch.Constructor">
            <summary>Sets the shim of Batch.Batch()</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.ShimBatch.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBatch.AllInstances.AllocatedUnitsGet">
            <summary>Sets the shim of Batch.get_AllocatedUnits()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBatch.AllInstances.AllocatedUnitsSetICollectionOfUnit">
            <summary>Sets the shim of Batch.set_AllocatedUnits(ICollection`1&lt;Unit&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBatch.AllInstances.BatchIDGet">
            <summary>Sets the shim of Batch.get_BatchID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBatch.AllInstances.BatchIDSetInt32">
            <summary>Sets the shim of Batch.set_BatchID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBatch.AllInstances.BatchLocationGet">
            <summary>Sets the shim of Batch.get_BatchLocation()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBatch.AllInstances.BatchLocationSetString">
            <summary>Sets the shim of Batch.set_BatchLocation(String value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBatch.AllInstances.BatchNameGet">
            <summary>Sets the shim of Batch.get_BatchName()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBatch.AllInstances.BatchNameSetString">
            <summary>Sets the shim of Batch.set_BatchName(String value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBatch.AllInstances.BatchRecipeGet">
            <summary>Sets the shim of Batch.get_BatchRecipe()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimBatch.AllInstances.BatchRecipeSetMasterRecipe">
            <summary>Sets the shim of Batch.set_BatchRecipe(MasterRecipe value)</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.ShimCollectionOfTestEntitie">
            <summary>Shim type of BrewMLLib.Models.CollectionOfTestEntitie</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimCollectionOfTestEntitie.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimCollectionOfTestEntitie.#ctor(BrewMLLib.Models.CollectionOfTestEntitie)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimCollectionOfTestEntitie.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimCollectionOfTestEntitie.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimCollectionOfTestEntitie.AddEntitieTestEntitie">
            <summary>Sets the shim of CollectionOfTestEntitie.AddEntitie(TestEntitie ent)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimCollectionOfTestEntitie.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimCollectionOfTestEntitie.CollectionOfTestEntitieIDGet">
            <summary>Sets the shim of CollectionOfTestEntitie.get_CollectionOfTestEntitieID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimCollectionOfTestEntitie.CollectionOfTestEntitieIDSetInt32">
            <summary>Sets the shim of CollectionOfTestEntitie.set_CollectionOfTestEntitieID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimCollectionOfTestEntitie.Constructor">
            <summary>Sets the shim of CollectionOfTestEntitie.CollectionOfTestEntitie()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimCollectionOfTestEntitie.TestEntitieTwosGet">
            <summary>Sets the shim of CollectionOfTestEntitie.get_TestEntitieTwos()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimCollectionOfTestEntitie.TestEntitieTwosSetICollectionOfTestEntitieTwo">
            <summary>Sets the shim of CollectionOfTestEntitie.set_TestEntitieTwos(ICollection`1&lt;TestEntitieTwo&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimCollectionOfTestEntitie.TestEntitiesGet">
            <summary>Sets the shim of CollectionOfTestEntitie.get_TestEntities()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimCollectionOfTestEntitie.TestEntitiesSetICollectionOfTestEntitie">
            <summary>Sets the shim of CollectionOfTestEntitie.set_TestEntities(ICollection`1&lt;TestEntitie&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimCollectionOfTestEntitie.testcolfloatGet">
            <summary>Sets the shim of CollectionOfTestEntitie.get_testcolfloat()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimCollectionOfTestEntitie.testcolfloatSetSingle">
            <summary>Sets the shim of CollectionOfTestEntitie.set_testcolfloat(Single value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimCollectionOfTestEntitie.testcolintGet">
            <summary>Sets the shim of CollectionOfTestEntitie.get_testcolint()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimCollectionOfTestEntitie.testcolintSetInt32">
            <summary>Sets the shim of CollectionOfTestEntitie.set_testcolint(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimCollectionOfTestEntitie.testcolstringGet">
            <summary>Sets the shim of CollectionOfTestEntitie.get_testcolstring()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimCollectionOfTestEntitie.testcolstringSetString">
            <summary>Sets the shim of CollectionOfTestEntitie.set_testcolstring(String value)</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.ShimCollectionOfTestEntitie.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimCollectionOfTestEntitie.AllInstances.AddEntitieTestEntitie">
            <summary>Sets the shim of CollectionOfTestEntitie.AddEntitie(TestEntitie ent)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimCollectionOfTestEntitie.AllInstances.CollectionOfTestEntitieIDGet">
            <summary>Sets the shim of CollectionOfTestEntitie.get_CollectionOfTestEntitieID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimCollectionOfTestEntitie.AllInstances.CollectionOfTestEntitieIDSetInt32">
            <summary>Sets the shim of CollectionOfTestEntitie.set_CollectionOfTestEntitieID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimCollectionOfTestEntitie.AllInstances.TestEntitieTwosGet">
            <summary>Sets the shim of CollectionOfTestEntitie.get_TestEntitieTwos()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimCollectionOfTestEntitie.AllInstances.TestEntitieTwosSetICollectionOfTestEntitieTwo">
            <summary>Sets the shim of CollectionOfTestEntitie.set_TestEntitieTwos(ICollection`1&lt;TestEntitieTwo&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimCollectionOfTestEntitie.AllInstances.TestEntitiesGet">
            <summary>Sets the shim of CollectionOfTestEntitie.get_TestEntities()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimCollectionOfTestEntitie.AllInstances.TestEntitiesSetICollectionOfTestEntitie">
            <summary>Sets the shim of CollectionOfTestEntitie.set_TestEntities(ICollection`1&lt;TestEntitie&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimCollectionOfTestEntitie.AllInstances.testcolfloatGet">
            <summary>Sets the shim of CollectionOfTestEntitie.get_testcolfloat()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimCollectionOfTestEntitie.AllInstances.testcolfloatSetSingle">
            <summary>Sets the shim of CollectionOfTestEntitie.set_testcolfloat(Single value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimCollectionOfTestEntitie.AllInstances.testcolintGet">
            <summary>Sets the shim of CollectionOfTestEntitie.get_testcolint()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimCollectionOfTestEntitie.AllInstances.testcolintSetInt32">
            <summary>Sets the shim of CollectionOfTestEntitie.set_testcolint(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimCollectionOfTestEntitie.AllInstances.testcolstringGet">
            <summary>Sets the shim of CollectionOfTestEntitie.get_testcolstring()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimCollectionOfTestEntitie.AllInstances.testcolstringSetString">
            <summary>Sets the shim of CollectionOfTestEntitie.set_testcolstring(String value)</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.ShimEQAuxilary">
            <summary>Shim type of BrewMLLib.Models.EQAuxilary</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimEQAuxilary.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimEQAuxilary.#ctor(BrewMLLib.Models.EQAuxilary)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimEQAuxilary.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimEQAuxilary.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQAuxilary.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQAuxilary.Constructor">
            <summary>Sets the shim of EQAuxilary.EQAuxilary()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQAuxilary.EQTypeGet">
            <summary>Sets the shim of EQAuxilary.get_EQType()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQAuxilary.EQTypeIDGet">
            <summary>Sets the shim of EQAuxilary.get_EQTypeID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQAuxilary.EQTypeIDSetInt32">
            <summary>Sets the shim of EQAuxilary.set_EQTypeID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQAuxilary.EQTypeSetEQType">
            <summary>Sets the shim of EQAuxilary.set_EQType(EQType value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQAuxilary.OnOffGet">
            <summary>Sets the shim of EQAuxilary.get_OnOff()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQAuxilary.OnOffSetInt32">
            <summary>Sets the shim of EQAuxilary.set_OnOff(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQAuxilary.PlantGet">
            <summary>Sets the shim of EQAuxilary.get_Plant()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQAuxilary.PlantIDGet">
            <summary>Sets the shim of EQAuxilary.get_PlantID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQAuxilary.PlantIDSetInt32">
            <summary>Sets the shim of EQAuxilary.set_PlantID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQAuxilary.PlantSetPlant">
            <summary>Sets the shim of EQAuxilary.set_Plant(Plant value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQAuxilary.RunningGet">
            <summary>Sets the shim of EQAuxilary.get_Running()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQAuxilary.RunningSetInt32">
            <summary>Sets the shim of EQAuxilary.set_Running(Int32 value)</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.ShimEQAuxilary.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQAuxilary.AllInstances.EQTypeGet">
            <summary>Sets the shim of EQAuxilary.get_EQType()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQAuxilary.AllInstances.EQTypeIDGet">
            <summary>Sets the shim of EQAuxilary.get_EQTypeID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQAuxilary.AllInstances.EQTypeIDSetInt32">
            <summary>Sets the shim of EQAuxilary.set_EQTypeID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQAuxilary.AllInstances.EQTypeSetEQType">
            <summary>Sets the shim of EQAuxilary.set_EQType(EQType value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQAuxilary.AllInstances.OnOffGet">
            <summary>Sets the shim of EQAuxilary.get_OnOff()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQAuxilary.AllInstances.OnOffSetInt32">
            <summary>Sets the shim of EQAuxilary.set_OnOff(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQAuxilary.AllInstances.PlantGet">
            <summary>Sets the shim of EQAuxilary.get_Plant()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQAuxilary.AllInstances.PlantIDGet">
            <summary>Sets the shim of EQAuxilary.get_PlantID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQAuxilary.AllInstances.PlantIDSetInt32">
            <summary>Sets the shim of EQAuxilary.set_PlantID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQAuxilary.AllInstances.PlantSetPlant">
            <summary>Sets the shim of EQAuxilary.set_Plant(Plant value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQAuxilary.AllInstances.RunningGet">
            <summary>Sets the shim of EQAuxilary.get_Running()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQAuxilary.AllInstances.RunningSetInt32">
            <summary>Sets the shim of EQAuxilary.set_Running(Int32 value)</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.ShimEQControlLoop">
            <summary>Shim type of BrewMLLib.Models.EQControlLoop</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimEQControlLoop.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimEQControlLoop.#ctor(BrewMLLib.Models.EQControlLoop)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimEQControlLoop.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimEQControlLoop.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.Constructor">
            <summary>Sets the shim of EQControlLoop.EQControlLoop()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.DoSomethingInt32">
            <summary>Sets the shim of EQControlLoop.DoSomething(Int32 blah)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.EQTypeGet">
            <summary>Sets the shim of EQControlLoop.get_EQType()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.EQTypeIDGet">
            <summary>Sets the shim of EQControlLoop.get_EQTypeID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.EQTypeIDSetInt32">
            <summary>Sets the shim of EQControlLoop.set_EQTypeID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.EQTypeSetEQType">
            <summary>Sets the shim of EQControlLoop.set_EQType(EQType value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.EnableTrendingGet">
            <summary>Sets the shim of EQControlLoop.get_EnableTrending()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.EnableTrendingSetBoolean">
            <summary>Sets the shim of EQControlLoop.set_EnableTrending(Boolean value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.HIAlarmGet">
            <summary>Sets the shim of EQControlLoop.get_HIAlarm()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.HIAlarmSetNullableOfSingle">
            <summary>Sets the shim of EQControlLoop.set_HIAlarm(Nullable`1&lt;Single&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.HIHIAlarmGet">
            <summary>Sets the shim of EQControlLoop.get_HIHIAlarm()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.HIHIAlarmSetNullableOfSingle">
            <summary>Sets the shim of EQControlLoop.set_HIHIAlarm(Nullable`1&lt;Single&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.LOAlarmGet">
            <summary>Sets the shim of EQControlLoop.get_LOAlarm()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.LOAlarmSetNullableOfSingle">
            <summary>Sets the shim of EQControlLoop.set_LOAlarm(Nullable`1&lt;Single&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.LOLOAlarmGet">
            <summary>Sets the shim of EQControlLoop.get_LOLOAlarm()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.LOLOAlarmSetNullableOfSingle">
            <summary>Sets the shim of EQControlLoop.set_LOLOAlarm(Nullable`1&lt;Single&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.MeasuredValueGet">
            <summary>Sets the shim of EQControlLoop.get_MeasuredValue()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.MeasuredValueSetNullableOfSingle">
            <summary>Sets the shim of EQControlLoop.set_MeasuredValue(Nullable`1&lt;Single&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.OutputGet">
            <summary>Sets the shim of EQControlLoop.get_Output()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.OutputSetNullableOfSingle">
            <summary>Sets the shim of EQControlLoop.set_Output(Nullable`1&lt;Single&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.PlantGet">
            <summary>Sets the shim of EQControlLoop.get_Plant()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.PlantIDGet">
            <summary>Sets the shim of EQControlLoop.get_PlantID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.PlantIDSetInt32">
            <summary>Sets the shim of EQControlLoop.set_PlantID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.PlantSetPlant">
            <summary>Sets the shim of EQControlLoop.set_Plant(Plant value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.ReverseActingGet">
            <summary>Sets the shim of EQControlLoop.get_ReverseActing()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.ReverseActingSetNullableOfBoolean">
            <summary>Sets the shim of EQControlLoop.set_ReverseActing(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.SetPointGet">
            <summary>Sets the shim of EQControlLoop.get_SetPoint()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.SetPointSetNullableOfSingle">
            <summary>Sets the shim of EQControlLoop.set_SetPoint(Nullable`1&lt;Single&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.SimMeasValueGet">
            <summary>Sets the shim of EQControlLoop.get_SimMeasValue()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.SimMeasValueSetNullableOfSingle">
            <summary>Sets the shim of EQControlLoop.set_SimMeasValue(Nullable`1&lt;Single&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.TagNameGet">
            <summary>Sets the shim of EQControlLoop.get_TagName()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.TagNameSetString">
            <summary>Sets the shim of EQControlLoop.set_TagName(String value)</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.ShimEQControlLoop.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.AllInstances.DoSomethingInt32">
            <summary>Sets the shim of EQControlLoop.DoSomething(Int32 blah)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.AllInstances.EQTypeGet">
            <summary>Sets the shim of EQControlLoop.get_EQType()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.AllInstances.EQTypeIDGet">
            <summary>Sets the shim of EQControlLoop.get_EQTypeID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.AllInstances.EQTypeIDSetInt32">
            <summary>Sets the shim of EQControlLoop.set_EQTypeID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.AllInstances.EQTypeSetEQType">
            <summary>Sets the shim of EQControlLoop.set_EQType(EQType value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.AllInstances.EnableTrendingGet">
            <summary>Sets the shim of EQControlLoop.get_EnableTrending()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.AllInstances.EnableTrendingSetBoolean">
            <summary>Sets the shim of EQControlLoop.set_EnableTrending(Boolean value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.AllInstances.HIAlarmGet">
            <summary>Sets the shim of EQControlLoop.get_HIAlarm()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.AllInstances.HIAlarmSetNullableOfSingle">
            <summary>Sets the shim of EQControlLoop.set_HIAlarm(Nullable`1&lt;Single&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.AllInstances.HIHIAlarmGet">
            <summary>Sets the shim of EQControlLoop.get_HIHIAlarm()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.AllInstances.HIHIAlarmSetNullableOfSingle">
            <summary>Sets the shim of EQControlLoop.set_HIHIAlarm(Nullable`1&lt;Single&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.AllInstances.LOAlarmGet">
            <summary>Sets the shim of EQControlLoop.get_LOAlarm()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.AllInstances.LOAlarmSetNullableOfSingle">
            <summary>Sets the shim of EQControlLoop.set_LOAlarm(Nullable`1&lt;Single&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.AllInstances.LOLOAlarmGet">
            <summary>Sets the shim of EQControlLoop.get_LOLOAlarm()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.AllInstances.LOLOAlarmSetNullableOfSingle">
            <summary>Sets the shim of EQControlLoop.set_LOLOAlarm(Nullable`1&lt;Single&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.AllInstances.MeasuredValueGet">
            <summary>Sets the shim of EQControlLoop.get_MeasuredValue()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.AllInstances.MeasuredValueSetNullableOfSingle">
            <summary>Sets the shim of EQControlLoop.set_MeasuredValue(Nullable`1&lt;Single&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.AllInstances.OutputGet">
            <summary>Sets the shim of EQControlLoop.get_Output()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.AllInstances.OutputSetNullableOfSingle">
            <summary>Sets the shim of EQControlLoop.set_Output(Nullable`1&lt;Single&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.AllInstances.PlantGet">
            <summary>Sets the shim of EQControlLoop.get_Plant()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.AllInstances.PlantIDGet">
            <summary>Sets the shim of EQControlLoop.get_PlantID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.AllInstances.PlantIDSetInt32">
            <summary>Sets the shim of EQControlLoop.set_PlantID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.AllInstances.PlantSetPlant">
            <summary>Sets the shim of EQControlLoop.set_Plant(Plant value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.AllInstances.ReverseActingGet">
            <summary>Sets the shim of EQControlLoop.get_ReverseActing()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.AllInstances.ReverseActingSetNullableOfBoolean">
            <summary>Sets the shim of EQControlLoop.set_ReverseActing(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.AllInstances.SetPointGet">
            <summary>Sets the shim of EQControlLoop.get_SetPoint()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.AllInstances.SetPointSetNullableOfSingle">
            <summary>Sets the shim of EQControlLoop.set_SetPoint(Nullable`1&lt;Single&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.AllInstances.SimMeasValueGet">
            <summary>Sets the shim of EQControlLoop.get_SimMeasValue()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.AllInstances.SimMeasValueSetNullableOfSingle">
            <summary>Sets the shim of EQControlLoop.set_SimMeasValue(Nullable`1&lt;Single&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.AllInstances.TagNameGet">
            <summary>Sets the shim of EQControlLoop.get_TagName()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQControlLoop.AllInstances.TagNameSetString">
            <summary>Sets the shim of EQControlLoop.set_TagName(String value)</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.ShimEQType">
            <summary>Shim type of BrewMLLib.Models.EQType</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimEQType.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimEQType.#ctor(BrewMLLib.Models.EQType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimEQType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimEQType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQType.Constructor">
            <summary>Sets the shim of EQType.EQType()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQType.EQTypeIDGet">
            <summary>Sets the shim of EQType.get_EQTypeID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQType.EQTypeIDSetInt32">
            <summary>Sets the shim of EQType.set_EQTypeID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQType.TypeDescriptionGet">
            <summary>Sets the shim of EQType.get_TypeDescription()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQType.TypeDescriptionSetString">
            <summary>Sets the shim of EQType.set_TypeDescription(String value)</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.ShimEQType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQType.AllInstances.EQTypeIDGet">
            <summary>Sets the shim of EQType.get_EQTypeID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQType.AllInstances.EQTypeIDSetInt32">
            <summary>Sets the shim of EQType.set_EQTypeID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQType.AllInstances.TypeDescriptionGet">
            <summary>Sets the shim of EQType.get_TypeDescription()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQType.AllInstances.TypeDescriptionSetString">
            <summary>Sets the shim of EQType.set_TypeDescription(String value)</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.ShimEQUnitOperation">
            <summary>Shim type of BrewMLLib.Models.EQUnitOperation</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimEQUnitOperation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimEQUnitOperation.#ctor(BrewMLLib.Models.EQUnitOperation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimEQUnitOperation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimEQUnitOperation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQUnitOperation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQUnitOperation.Constructor">
            <summary>Sets the shim of EQUnitOperation.EQUnitOperation()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQUnitOperation.NameOfOperationGet">
            <summary>Sets the shim of EQUnitOperation.get_NameOfOperation()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQUnitOperation.NameOfOperationSetString">
            <summary>Sets the shim of EQUnitOperation.set_NameOfOperation(String value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQUnitOperation.UnitOperationIDGet">
            <summary>Sets the shim of EQUnitOperation.get_UnitOperationID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQUnitOperation.UnitOperationIDSetInt32">
            <summary>Sets the shim of EQUnitOperation.set_UnitOperationID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQUnitOperation.UnitsThisOperationCanRunOnGet">
            <summary>Sets the shim of EQUnitOperation.get_UnitsThisOperationCanRunOn()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQUnitOperation.UnitsThisOperationCanRunOnSetICollectionOfUnit">
            <summary>Sets the shim of EQUnitOperation.set_UnitsThisOperationCanRunOn(ICollection`1&lt;Unit&gt; value)</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.ShimEQUnitOperation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQUnitOperation.AllInstances.NameOfOperationGet">
            <summary>Sets the shim of EQUnitOperation.get_NameOfOperation()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQUnitOperation.AllInstances.NameOfOperationSetString">
            <summary>Sets the shim of EQUnitOperation.set_NameOfOperation(String value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQUnitOperation.AllInstances.UnitOperationIDGet">
            <summary>Sets the shim of EQUnitOperation.get_UnitOperationID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQUnitOperation.AllInstances.UnitOperationIDSetInt32">
            <summary>Sets the shim of EQUnitOperation.set_UnitOperationID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQUnitOperation.AllInstances.UnitsThisOperationCanRunOnGet">
            <summary>Sets the shim of EQUnitOperation.get_UnitsThisOperationCanRunOn()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQUnitOperation.AllInstances.UnitsThisOperationCanRunOnSetICollectionOfUnit">
            <summary>Sets the shim of EQUnitOperation.set_UnitsThisOperationCanRunOn(ICollection`1&lt;Unit&gt; value)</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.ShimEQVessel">
            <summary>Shim type of BrewMLLib.Models.EQVessel</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimEQVessel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimEQVessel.#ctor(BrewMLLib.Models.EQVessel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimEQVessel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimEQVessel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQVessel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQVessel.Constructor">
            <summary>Sets the shim of EQVessel.EQVessel()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQVessel.EQTypeGet">
            <summary>Sets the shim of EQVessel.get_EQType()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQVessel.EQTypeIDGet">
            <summary>Sets the shim of EQVessel.get_EQTypeID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQVessel.EQTypeIDSetInt32">
            <summary>Sets the shim of EQVessel.set_EQTypeID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQVessel.EQTypeSetEQType">
            <summary>Sets the shim of EQVessel.set_EQType(EQType value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQVessel.MaxTempGet">
            <summary>Sets the shim of EQVessel.get_MaxTemp()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQVessel.MaxTempSetSingle">
            <summary>Sets the shim of EQVessel.set_MaxTemp(Single value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQVessel.MaxVolumeGet">
            <summary>Sets the shim of EQVessel.get_MaxVolume()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQVessel.MaxVolumeSetSingle">
            <summary>Sets the shim of EQVessel.set_MaxVolume(Single value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQVessel.MinVolumeGet">
            <summary>Sets the shim of EQVessel.get_MinVolume()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQVessel.MinVolumeSetSingle">
            <summary>Sets the shim of EQVessel.set_MinVolume(Single value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQVessel.NameGet">
            <summary>Sets the shim of EQVessel.get_Name()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQVessel.NameSetString">
            <summary>Sets the shim of EQVessel.set_Name(String value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQVessel.PlantGet">
            <summary>Sets the shim of EQVessel.get_Plant()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQVessel.PlantIDGet">
            <summary>Sets the shim of EQVessel.get_PlantID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQVessel.PlantIDSetInt32">
            <summary>Sets the shim of EQVessel.set_PlantID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQVessel.PlantSetPlant">
            <summary>Sets the shim of EQVessel.set_Plant(Plant value)</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.ShimEQVessel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQVessel.AllInstances.EQTypeGet">
            <summary>Sets the shim of EQVessel.get_EQType()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQVessel.AllInstances.EQTypeIDGet">
            <summary>Sets the shim of EQVessel.get_EQTypeID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQVessel.AllInstances.EQTypeIDSetInt32">
            <summary>Sets the shim of EQVessel.set_EQTypeID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQVessel.AllInstances.EQTypeSetEQType">
            <summary>Sets the shim of EQVessel.set_EQType(EQType value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQVessel.AllInstances.MaxTempGet">
            <summary>Sets the shim of EQVessel.get_MaxTemp()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQVessel.AllInstances.MaxTempSetSingle">
            <summary>Sets the shim of EQVessel.set_MaxTemp(Single value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQVessel.AllInstances.MaxVolumeGet">
            <summary>Sets the shim of EQVessel.get_MaxVolume()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQVessel.AllInstances.MaxVolumeSetSingle">
            <summary>Sets the shim of EQVessel.set_MaxVolume(Single value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQVessel.AllInstances.MinVolumeGet">
            <summary>Sets the shim of EQVessel.get_MinVolume()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQVessel.AllInstances.MinVolumeSetSingle">
            <summary>Sets the shim of EQVessel.set_MinVolume(Single value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQVessel.AllInstances.NameGet">
            <summary>Sets the shim of EQVessel.get_Name()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQVessel.AllInstances.NameSetString">
            <summary>Sets the shim of EQVessel.set_Name(String value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQVessel.AllInstances.PlantGet">
            <summary>Sets the shim of EQVessel.get_Plant()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQVessel.AllInstances.PlantIDGet">
            <summary>Sets the shim of EQVessel.get_PlantID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQVessel.AllInstances.PlantIDSetInt32">
            <summary>Sets the shim of EQVessel.set_PlantID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimEQVessel.AllInstances.PlantSetPlant">
            <summary>Sets the shim of EQVessel.set_Plant(Plant value)</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.ShimIngredient">
            <summary>Shim type of BrewMLLib.Models.Ingredient</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimIngredient.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimIngredient.#ctor(BrewMLLib.Models.Ingredient)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimIngredient.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimIngredient.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredient.AmountActuallyRecievedGet">
            <summary>Sets the shim of Ingredient.get_AmountActuallyRecieved()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredient.AmountActuallyRecievedSetNullableOfInt32">
            <summary>Sets the shim of Ingredient.set_AmountActuallyRecieved(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredient.AmountNeededGet">
            <summary>Sets the shim of Ingredient.get_AmountNeeded()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredient.AmountNeededSetInt32">
            <summary>Sets the shim of Ingredient.set_AmountNeeded(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredient.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredient.Constructor">
            <summary>Sets the shim of Ingredient.Ingredient()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredient.IngredientIDGet">
            <summary>Sets the shim of Ingredient.get_IngredientID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredient.IngredientIDSetInt32">
            <summary>Sets the shim of Ingredient.set_IngredientID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredient.IngredientTypeGet">
            <summary>Sets the shim of Ingredient.get_IngredientType()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredient.IngredientTypeIDGet">
            <summary>Sets the shim of Ingredient.get_IngredientTypeID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredient.IngredientTypeIDSetInt32">
            <summary>Sets the shim of Ingredient.set_IngredientTypeID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredient.IngredientTypeSetIngredientType">
            <summary>Sets the shim of Ingredient.set_IngredientType(IngredientType value)</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.ShimIngredient.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredient.AllInstances.AmountActuallyRecievedGet">
            <summary>Sets the shim of Ingredient.get_AmountActuallyRecieved()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredient.AllInstances.AmountActuallyRecievedSetNullableOfInt32">
            <summary>Sets the shim of Ingredient.set_AmountActuallyRecieved(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredient.AllInstances.AmountNeededGet">
            <summary>Sets the shim of Ingredient.get_AmountNeeded()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredient.AllInstances.AmountNeededSetInt32">
            <summary>Sets the shim of Ingredient.set_AmountNeeded(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredient.AllInstances.IngredientIDGet">
            <summary>Sets the shim of Ingredient.get_IngredientID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredient.AllInstances.IngredientIDSetInt32">
            <summary>Sets the shim of Ingredient.set_IngredientID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredient.AllInstances.IngredientTypeGet">
            <summary>Sets the shim of Ingredient.get_IngredientType()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredient.AllInstances.IngredientTypeIDGet">
            <summary>Sets the shim of Ingredient.get_IngredientTypeID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredient.AllInstances.IngredientTypeIDSetInt32">
            <summary>Sets the shim of Ingredient.set_IngredientTypeID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredient.AllInstances.IngredientTypeSetIngredientType">
            <summary>Sets the shim of Ingredient.set_IngredientType(IngredientType value)</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.ShimIngredientType">
            <summary>Shim type of BrewMLLib.Models.IngredientType</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimIngredientType.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimIngredientType.#ctor(BrewMLLib.Models.IngredientType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimIngredientType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimIngredientType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredientType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredientType.Constructor">
            <summary>Sets the shim of IngredientType.IngredientType()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredientType.CostGet">
            <summary>Sets the shim of IngredientType.get_Cost()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredientType.CostSetInt32">
            <summary>Sets the shim of IngredientType.set_Cost(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredientType.DescriptionGet">
            <summary>Sets the shim of IngredientType.get_Description()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredientType.DescriptionSetString">
            <summary>Sets the shim of IngredientType.set_Description(String value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredientType.FinancialSystemCodeGet">
            <summary>Sets the shim of IngredientType.get_FinancialSystemCode()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredientType.FinancialSystemCodeSetInt32">
            <summary>Sets the shim of IngredientType.set_FinancialSystemCode(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredientType.IngredientTypeIDGet">
            <summary>Sets the shim of IngredientType.get_IngredientTypeID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredientType.IngredientTypeIDSetInt32">
            <summary>Sets the shim of IngredientType.set_IngredientTypeID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredientType.NameGet">
            <summary>Sets the shim of IngredientType.get_Name()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredientType.NameSetString">
            <summary>Sets the shim of IngredientType.set_Name(String value)</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.ShimIngredientType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredientType.AllInstances.CostGet">
            <summary>Sets the shim of IngredientType.get_Cost()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredientType.AllInstances.CostSetInt32">
            <summary>Sets the shim of IngredientType.set_Cost(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredientType.AllInstances.DescriptionGet">
            <summary>Sets the shim of IngredientType.get_Description()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredientType.AllInstances.DescriptionSetString">
            <summary>Sets the shim of IngredientType.set_Description(String value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredientType.AllInstances.FinancialSystemCodeGet">
            <summary>Sets the shim of IngredientType.get_FinancialSystemCode()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredientType.AllInstances.FinancialSystemCodeSetInt32">
            <summary>Sets the shim of IngredientType.set_FinancialSystemCode(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredientType.AllInstances.IngredientTypeIDGet">
            <summary>Sets the shim of IngredientType.get_IngredientTypeID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredientType.AllInstances.IngredientTypeIDSetInt32">
            <summary>Sets the shim of IngredientType.set_IngredientTypeID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredientType.AllInstances.NameGet">
            <summary>Sets the shim of IngredientType.get_Name()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimIngredientType.AllInstances.NameSetString">
            <summary>Sets the shim of IngredientType.set_Name(String value)</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.ShimMasterRecipe">
            <summary>Shim type of BrewMLLib.Models.MasterRecipe</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimMasterRecipe.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimMasterRecipe.#ctor(BrewMLLib.Models.MasterRecipe)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimMasterRecipe.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimMasterRecipe.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimMasterRecipe.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimMasterRecipe.BrandDescriptionGet">
            <summary>Sets the shim of MasterRecipe.get_BrandDescription()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimMasterRecipe.BrandDescriptionSetString">
            <summary>Sets the shim of MasterRecipe.set_BrandDescription(String value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimMasterRecipe.BrandNameGet">
            <summary>Sets the shim of MasterRecipe.get_BrandName()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimMasterRecipe.BrandNameSetString">
            <summary>Sets the shim of MasterRecipe.set_BrandName(String value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimMasterRecipe.Constructor">
            <summary>Sets the shim of MasterRecipe.MasterRecipe()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimMasterRecipe.IngredientsGet">
            <summary>Sets the shim of MasterRecipe.get_Ingredients()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimMasterRecipe.IngredientsSetICollectionOfIngredient">
            <summary>Sets the shim of MasterRecipe.set_Ingredients(ICollection`1&lt;Ingredient&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimMasterRecipe.MasterRecipeIDGet">
            <summary>Sets the shim of MasterRecipe.get_MasterRecipeID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimMasterRecipe.MasterRecipeIDSetInt32">
            <summary>Sets the shim of MasterRecipe.set_MasterRecipeID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimMasterRecipe.PlantsGet">
            <summary>Sets the shim of MasterRecipe.get_Plants()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimMasterRecipe.PlantsSetICollectionOfPlant">
            <summary>Sets the shim of MasterRecipe.set_Plants(ICollection`1&lt;Plant&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimMasterRecipe.QaulityTargetsGet">
            <summary>Sets the shim of MasterRecipe.get_QaulityTargets()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimMasterRecipe.QaulityTargetsSetString">
            <summary>Sets the shim of MasterRecipe.set_QaulityTargets(String value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimMasterRecipe.RecOperationsGet">
            <summary>Sets the shim of MasterRecipe.get_RecOperations()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimMasterRecipe.RecOperationsSetICollectionOfRecUnitOperation">
            <summary>Sets the shim of MasterRecipe.set_RecOperations(ICollection`1&lt;RecUnitOperation&gt; value)</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.ShimMasterRecipe.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimMasterRecipe.AllInstances.BrandDescriptionGet">
            <summary>Sets the shim of MasterRecipe.get_BrandDescription()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimMasterRecipe.AllInstances.BrandDescriptionSetString">
            <summary>Sets the shim of MasterRecipe.set_BrandDescription(String value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimMasterRecipe.AllInstances.BrandNameGet">
            <summary>Sets the shim of MasterRecipe.get_BrandName()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimMasterRecipe.AllInstances.BrandNameSetString">
            <summary>Sets the shim of MasterRecipe.set_BrandName(String value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimMasterRecipe.AllInstances.IngredientsGet">
            <summary>Sets the shim of MasterRecipe.get_Ingredients()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimMasterRecipe.AllInstances.IngredientsSetICollectionOfIngredient">
            <summary>Sets the shim of MasterRecipe.set_Ingredients(ICollection`1&lt;Ingredient&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimMasterRecipe.AllInstances.MasterRecipeIDGet">
            <summary>Sets the shim of MasterRecipe.get_MasterRecipeID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimMasterRecipe.AllInstances.MasterRecipeIDSetInt32">
            <summary>Sets the shim of MasterRecipe.set_MasterRecipeID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimMasterRecipe.AllInstances.PlantsGet">
            <summary>Sets the shim of MasterRecipe.get_Plants()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimMasterRecipe.AllInstances.PlantsSetICollectionOfPlant">
            <summary>Sets the shim of MasterRecipe.set_Plants(ICollection`1&lt;Plant&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimMasterRecipe.AllInstances.QaulityTargetsGet">
            <summary>Sets the shim of MasterRecipe.get_QaulityTargets()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimMasterRecipe.AllInstances.QaulityTargetsSetString">
            <summary>Sets the shim of MasterRecipe.set_QaulityTargets(String value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimMasterRecipe.AllInstances.RecOperationsGet">
            <summary>Sets the shim of MasterRecipe.get_RecOperations()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimMasterRecipe.AllInstances.RecOperationsSetICollectionOfRecUnitOperation">
            <summary>Sets the shim of MasterRecipe.set_RecOperations(ICollection`1&lt;RecUnitOperation&gt; value)</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.ShimPlant">
            <summary>Shim type of BrewMLLib.Models.Plant</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimPlant.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimPlant.#ctor(BrewMLLib.Models.Plant)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimPlant.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimPlant.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.BrewPubMenuGet">
            <summary>Sets the shim of Plant.get_BrewPubMenu()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.BrewPubMenuSetString">
            <summary>Sets the shim of Plant.set_BrewPubMenu(String value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.Constructor">
            <summary>Sets the shim of Plant.Plant()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.PlantAddressGet">
            <summary>Sets the shim of Plant.get_PlantAddress()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.PlantAddressSetString">
            <summary>Sets the shim of Plant.set_PlantAddress(String value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.PlantAuxGet">
            <summary>Sets the shim of Plant.get_PlantAux()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.PlantAuxSetICollectionOfEQAuxilary">
            <summary>Sets the shim of Plant.set_PlantAux(ICollection`1&lt;EQAuxilary&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.PlantIDGet">
            <summary>Sets the shim of Plant.get_PlantID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.PlantIDSetInt32">
            <summary>Sets the shim of Plant.set_PlantID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.PlantLocationGet">
            <summary>Sets the shim of Plant.get_PlantLocation()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.PlantLocationSetString">
            <summary>Sets the shim of Plant.set_PlantLocation(String value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.PlantLoopsGet">
            <summary>Sets the shim of Plant.get_PlantLoops()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.PlantLoopsSetICollectionOfEQControlLoop">
            <summary>Sets the shim of Plant.set_PlantLoops(ICollection`1&lt;EQControlLoop&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.PlantNameGet">
            <summary>Sets the shim of Plant.get_PlantName()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.PlantNameSetString">
            <summary>Sets the shim of Plant.set_PlantName(String value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.PlantVesselsGet">
            <summary>Sets the shim of Plant.get_PlantVessels()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.PlantVesselsSetICollectionOfEQVessel">
            <summary>Sets the shim of Plant.set_PlantVessels(ICollection`1&lt;EQVessel&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.ThisPlantsBrandsGet">
            <summary>Sets the shim of Plant.get_ThisPlantsBrands()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.ThisPlantsBrandsSetICollectionOfMasterRecipe">
            <summary>Sets the shim of Plant.set_ThisPlantsBrands(ICollection`1&lt;MasterRecipe&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.UnitsGet">
            <summary>Sets the shim of Plant.get_Units()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.UnitsSetICollectionOfUnit">
            <summary>Sets the shim of Plant.set_Units(ICollection`1&lt;Unit&gt; value)</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.ShimPlant.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.AllInstances.BrewPubMenuGet">
            <summary>Sets the shim of Plant.get_BrewPubMenu()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.AllInstances.BrewPubMenuSetString">
            <summary>Sets the shim of Plant.set_BrewPubMenu(String value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.AllInstances.PlantAddressGet">
            <summary>Sets the shim of Plant.get_PlantAddress()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.AllInstances.PlantAddressSetString">
            <summary>Sets the shim of Plant.set_PlantAddress(String value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.AllInstances.PlantAuxGet">
            <summary>Sets the shim of Plant.get_PlantAux()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.AllInstances.PlantAuxSetICollectionOfEQAuxilary">
            <summary>Sets the shim of Plant.set_PlantAux(ICollection`1&lt;EQAuxilary&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.AllInstances.PlantIDGet">
            <summary>Sets the shim of Plant.get_PlantID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.AllInstances.PlantIDSetInt32">
            <summary>Sets the shim of Plant.set_PlantID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.AllInstances.PlantLocationGet">
            <summary>Sets the shim of Plant.get_PlantLocation()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.AllInstances.PlantLocationSetString">
            <summary>Sets the shim of Plant.set_PlantLocation(String value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.AllInstances.PlantLoopsGet">
            <summary>Sets the shim of Plant.get_PlantLoops()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.AllInstances.PlantLoopsSetICollectionOfEQControlLoop">
            <summary>Sets the shim of Plant.set_PlantLoops(ICollection`1&lt;EQControlLoop&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.AllInstances.PlantNameGet">
            <summary>Sets the shim of Plant.get_PlantName()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.AllInstances.PlantNameSetString">
            <summary>Sets the shim of Plant.set_PlantName(String value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.AllInstances.PlantVesselsGet">
            <summary>Sets the shim of Plant.get_PlantVessels()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.AllInstances.PlantVesselsSetICollectionOfEQVessel">
            <summary>Sets the shim of Plant.set_PlantVessels(ICollection`1&lt;EQVessel&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.AllInstances.ThisPlantsBrandsGet">
            <summary>Sets the shim of Plant.get_ThisPlantsBrands()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.AllInstances.ThisPlantsBrandsSetICollectionOfMasterRecipe">
            <summary>Sets the shim of Plant.set_ThisPlantsBrands(ICollection`1&lt;MasterRecipe&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.AllInstances.UnitsGet">
            <summary>Sets the shim of Plant.get_Units()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimPlant.AllInstances.UnitsSetICollectionOfUnit">
            <summary>Sets the shim of Plant.set_Units(ICollection`1&lt;Unit&gt; value)</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.ShimRecUnitOperation">
            <summary>Shim type of BrewMLLib.Models.RecUnitOperation</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimRecUnitOperation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimRecUnitOperation.#ctor(BrewMLLib.Models.RecUnitOperation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimRecUnitOperation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimRecUnitOperation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimRecUnitOperation.AllTransitionsTrueGet">
            <summary>Sets the shim of RecUnitOperation.get_AllTransitionsTrue()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimRecUnitOperation.AllTransitionsTrueSetBoolean">
            <summary>Sets the shim of RecUnitOperation.set_AllTransitionsTrue(Boolean value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimRecUnitOperation.AllowedUnitsGet">
            <summary>Sets the shim of RecUnitOperation.get_AllowedUnits()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimRecUnitOperation.AllowedUnitsSetICollectionOfUnit">
            <summary>Sets the shim of RecUnitOperation.set_AllowedUnits(ICollection`1&lt;Unit&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimRecUnitOperation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimRecUnitOperation.Constructor">
            <summary>Sets the shim of RecUnitOperation.RecUnitOperation()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimRecUnitOperation.RecUnitOperationIDGet">
            <summary>Sets the shim of RecUnitOperation.get_RecUnitOperationID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimRecUnitOperation.RecUnitOperationIDSetInt32">
            <summary>Sets the shim of RecUnitOperation.set_RecUnitOperationID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimRecUnitOperation.SetPointGet">
            <summary>Sets the shim of RecUnitOperation.get_SetPoint()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimRecUnitOperation.SetPointSetSingle">
            <summary>Sets the shim of RecUnitOperation.set_SetPoint(Single value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimRecUnitOperation.TransitionsGet">
            <summary>Sets the shim of RecUnitOperation.get_Transitions()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimRecUnitOperation.TransitionsSetListOfTransition">
            <summary>Sets the shim of RecUnitOperation.set_Transitions(List`1&lt;Transition&gt; value)</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.ShimRecUnitOperation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimRecUnitOperation.AllInstances.AllTransitionsTrueGet">
            <summary>Sets the shim of RecUnitOperation.get_AllTransitionsTrue()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimRecUnitOperation.AllInstances.AllTransitionsTrueSetBoolean">
            <summary>Sets the shim of RecUnitOperation.set_AllTransitionsTrue(Boolean value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimRecUnitOperation.AllInstances.AllowedUnitsGet">
            <summary>Sets the shim of RecUnitOperation.get_AllowedUnits()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimRecUnitOperation.AllInstances.AllowedUnitsSetICollectionOfUnit">
            <summary>Sets the shim of RecUnitOperation.set_AllowedUnits(ICollection`1&lt;Unit&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimRecUnitOperation.AllInstances.RecUnitOperationIDGet">
            <summary>Sets the shim of RecUnitOperation.get_RecUnitOperationID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimRecUnitOperation.AllInstances.RecUnitOperationIDSetInt32">
            <summary>Sets the shim of RecUnitOperation.set_RecUnitOperationID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimRecUnitOperation.AllInstances.SetPointGet">
            <summary>Sets the shim of RecUnitOperation.get_SetPoint()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimRecUnitOperation.AllInstances.SetPointSetSingle">
            <summary>Sets the shim of RecUnitOperation.set_SetPoint(Single value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimRecUnitOperation.AllInstances.TransitionsGet">
            <summary>Sets the shim of RecUnitOperation.get_Transitions()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimRecUnitOperation.AllInstances.TransitionsSetListOfTransition">
            <summary>Sets the shim of RecUnitOperation.set_Transitions(List`1&lt;Transition&gt; value)</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.ShimTestEntitie">
            <summary>Shim type of BrewMLLib.Models.TestEntitie</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimTestEntitie.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimTestEntitie.#ctor(BrewMLLib.Models.TestEntitie)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimTestEntitie.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimTestEntitie.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitie.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitie.Constructor">
            <summary>Sets the shim of TestEntitie.TestEntitie()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitie.TestEntitieIDGet">
            <summary>Sets the shim of TestEntitie.get_TestEntitieID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitie.TestEntitieIDSetInt32">
            <summary>Sets the shim of TestEntitie.set_TestEntitieID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitie.testfloatGet">
            <summary>Sets the shim of TestEntitie.get_testfloat()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitie.testfloatSetSingle">
            <summary>Sets the shim of TestEntitie.set_testfloat(Single value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitie.testintGet">
            <summary>Sets the shim of TestEntitie.get_testint()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitie.testintSetInt32">
            <summary>Sets the shim of TestEntitie.set_testint(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitie.teststringGet">
            <summary>Sets the shim of TestEntitie.get_teststring()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitie.teststringSetString">
            <summary>Sets the shim of TestEntitie.set_teststring(String value)</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.ShimTestEntitie.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitie.AllInstances.TestEntitieIDGet">
            <summary>Sets the shim of TestEntitie.get_TestEntitieID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitie.AllInstances.TestEntitieIDSetInt32">
            <summary>Sets the shim of TestEntitie.set_TestEntitieID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitie.AllInstances.testfloatGet">
            <summary>Sets the shim of TestEntitie.get_testfloat()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitie.AllInstances.testfloatSetSingle">
            <summary>Sets the shim of TestEntitie.set_testfloat(Single value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitie.AllInstances.testintGet">
            <summary>Sets the shim of TestEntitie.get_testint()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitie.AllInstances.testintSetInt32">
            <summary>Sets the shim of TestEntitie.set_testint(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitie.AllInstances.teststringGet">
            <summary>Sets the shim of TestEntitie.get_teststring()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitie.AllInstances.teststringSetString">
            <summary>Sets the shim of TestEntitie.set_teststring(String value)</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.ShimTestEntitieBuilder">
            <summary>Shim type of BrewMLLib.Models.TestEntitieBuilder</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimTestEntitieBuilder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimTestEntitieBuilder.#ctor(BrewMLLib.Models.TestEntitieBuilder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimTestEntitieBuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimTestEntitieBuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimTestEntitieBuilder.Bind(BrewMLLib.Models.IFluentTest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitieBuilder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitieBuilder.Constructor">
            <summary>Sets the shim of TestEntitieBuilder.TestEntitieBuilder()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitieBuilder.Create">
            <summary>Sets the shim of TestEntitieBuilder.Create()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitieBuilder.SetTestIntInt32">
            <summary>Sets the shim of TestEntitieBuilder.SetTestInt(Int32 q)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitieBuilder.SetTestStringString">
            <summary>Sets the shim of TestEntitieBuilder.SetTestString(String w)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitieBuilder.Value">
            <summary>Sets the shim of TestEntitieBuilder.Value()</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.ShimTestEntitieBuilder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitieBuilder.AllInstances.Create">
            <summary>Sets the shim of TestEntitieBuilder.Create()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitieBuilder.AllInstances.SetTestIntInt32">
            <summary>Sets the shim of TestEntitieBuilder.SetTestInt(Int32 q)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitieBuilder.AllInstances.SetTestStringString">
            <summary>Sets the shim of TestEntitieBuilder.SetTestString(String w)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitieBuilder.AllInstances.Value">
            <summary>Sets the shim of TestEntitieBuilder.Value()</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.ShimTestEntitieTwo">
            <summary>Shim type of BrewMLLib.Models.TestEntitieTwo</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimTestEntitieTwo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimTestEntitieTwo.#ctor(BrewMLLib.Models.TestEntitieTwo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimTestEntitieTwo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimTestEntitieTwo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitieTwo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitieTwo.Constructor">
            <summary>Sets the shim of TestEntitieTwo.TestEntitieTwo()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitieTwo.ConstructorStringInt32Single">
            <summary>Sets the shim of TestEntitieTwo.TestEntitieTwo(String asdf, Int32 asdd, Single fve)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitieTwo.TestEntitieTwoIDGet">
            <summary>Sets the shim of TestEntitieTwo.get_TestEntitieTwoID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitieTwo.TestEntitieTwoIDSetInt32">
            <summary>Sets the shim of TestEntitieTwo.set_TestEntitieTwoID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitieTwo.testfloatGet">
            <summary>Sets the shim of TestEntitieTwo.get_testfloat()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitieTwo.testfloatSetSingle">
            <summary>Sets the shim of TestEntitieTwo.set_testfloat(Single value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitieTwo.testintGet">
            <summary>Sets the shim of TestEntitieTwo.get_testint()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitieTwo.testintSetInt32">
            <summary>Sets the shim of TestEntitieTwo.set_testint(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitieTwo.teststringGet">
            <summary>Sets the shim of TestEntitieTwo.get_teststring()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitieTwo.teststringSetString">
            <summary>Sets the shim of TestEntitieTwo.set_teststring(String value)</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.ShimTestEntitieTwo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitieTwo.AllInstances.TestEntitieTwoIDGet">
            <summary>Sets the shim of TestEntitieTwo.get_TestEntitieTwoID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitieTwo.AllInstances.TestEntitieTwoIDSetInt32">
            <summary>Sets the shim of TestEntitieTwo.set_TestEntitieTwoID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitieTwo.AllInstances.testfloatGet">
            <summary>Sets the shim of TestEntitieTwo.get_testfloat()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitieTwo.AllInstances.testfloatSetSingle">
            <summary>Sets the shim of TestEntitieTwo.set_testfloat(Single value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitieTwo.AllInstances.testintGet">
            <summary>Sets the shim of TestEntitieTwo.get_testint()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitieTwo.AllInstances.testintSetInt32">
            <summary>Sets the shim of TestEntitieTwo.set_testint(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitieTwo.AllInstances.teststringGet">
            <summary>Sets the shim of TestEntitieTwo.get_teststring()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTestEntitieTwo.AllInstances.teststringSetString">
            <summary>Sets the shim of TestEntitieTwo.set_teststring(String value)</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.ShimTransition">
            <summary>Shim type of BrewMLLib.Models.Transition</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimTransition.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimTransition.#ctor(BrewMLLib.Models.Transition)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimTransition.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimTransition.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTransition.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTransition.Constructor">
            <summary>Sets the shim of Transition.Transition()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTransition.EvaluateConditionGet">
            <summary>Sets the shim of Transition.get_EvaluateCondition()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTransition.EvaluateConditionSetNullableOfBoolean">
            <summary>Sets the shim of Transition.set_EvaluateCondition(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTransition.TimeGet">
            <summary>Sets the shim of Transition.get_Time()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTransition.TimeSetInt32">
            <summary>Sets the shim of Transition.set_Time(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTransition.TimerGet">
            <summary>Sets the shim of Transition.get_Timer()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTransition.TimerSetNullableOfInt32">
            <summary>Sets the shim of Transition.set_Timer(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTransition.TransitionIDGet">
            <summary>Sets the shim of Transition.get_TransitionID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTransition.TransitionIDSetInt32">
            <summary>Sets the shim of Transition.set_TransitionID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTransition.TransitionNameGet">
            <summary>Sets the shim of Transition.get_TransitionName()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTransition.TransitionNameSetString">
            <summary>Sets the shim of Transition.set_TransitionName(String value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTransition.loopGet">
            <summary>Sets the shim of Transition.get_loop()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTransition.loopSetEQControlLoop">
            <summary>Sets the shim of Transition.set_loop(EQControlLoop value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTransition.operantGet">
            <summary>Sets the shim of Transition.get_operant()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTransition.operantSetOperants">
            <summary>Sets the shim of Transition.set_operant(Operants value)</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.ShimTransition.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTransition.AllInstances.EvaluateConditionGet">
            <summary>Sets the shim of Transition.get_EvaluateCondition()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTransition.AllInstances.EvaluateConditionSetNullableOfBoolean">
            <summary>Sets the shim of Transition.set_EvaluateCondition(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTransition.AllInstances.TimeGet">
            <summary>Sets the shim of Transition.get_Time()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTransition.AllInstances.TimeSetInt32">
            <summary>Sets the shim of Transition.set_Time(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTransition.AllInstances.TimerGet">
            <summary>Sets the shim of Transition.get_Timer()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTransition.AllInstances.TimerSetNullableOfInt32">
            <summary>Sets the shim of Transition.set_Timer(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTransition.AllInstances.TransitionIDGet">
            <summary>Sets the shim of Transition.get_TransitionID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTransition.AllInstances.TransitionIDSetInt32">
            <summary>Sets the shim of Transition.set_TransitionID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTransition.AllInstances.TransitionNameGet">
            <summary>Sets the shim of Transition.get_TransitionName()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTransition.AllInstances.TransitionNameSetString">
            <summary>Sets the shim of Transition.set_TransitionName(String value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTransition.AllInstances.loopGet">
            <summary>Sets the shim of Transition.get_loop()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTransition.AllInstances.loopSetEQControlLoop">
            <summary>Sets the shim of Transition.set_loop(EQControlLoop value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTransition.AllInstances.operantGet">
            <summary>Sets the shim of Transition.get_operant()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimTransition.AllInstances.operantSetOperants">
            <summary>Sets the shim of Transition.set_operant(Operants value)</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.ShimUnit">
            <summary>Shim type of BrewMLLib.Models.Unit</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimUnit.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimUnit.#ctor(BrewMLLib.Models.Unit)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimUnit.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.ShimUnit.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.AvailableOperationsGet">
            <summary>Sets the shim of Unit.get_AvailableOperations()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.AvailableOperationsSetICollectionOfEQUnitOperation">
            <summary>Sets the shim of Unit.set_AvailableOperations(ICollection`1&lt;EQUnitOperation&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.Constructor">
            <summary>Sets the shim of Unit.Unit()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.CurrentBatchGet">
            <summary>Sets the shim of Unit.get_CurrentBatch()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.CurrentBatchSetBatch">
            <summary>Sets the shim of Unit.set_CurrentBatch(Batch value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.CurrentEQOperationGet">
            <summary>Sets the shim of Unit.get_CurrentEQOperation()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.CurrentEQOperationSetEQUnitOperation">
            <summary>Sets the shim of Unit.set_CurrentEQOperation(EQUnitOperation value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.InputUnitsGet">
            <summary>Sets the shim of Unit.get_InputUnits()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.InputUnitsSetICollectionOfUnit">
            <summary>Sets the shim of Unit.set_InputUnits(ICollection`1&lt;Unit&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.OutputUnitsGet">
            <summary>Sets the shim of Unit.get_OutputUnits()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.OutputUnitsSetICollectionOfUnit">
            <summary>Sets the shim of Unit.set_OutputUnits(ICollection`1&lt;Unit&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.PlantGet">
            <summary>Sets the shim of Unit.get_Plant()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.PlantIDGet">
            <summary>Sets the shim of Unit.get_PlantID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.PlantIDSetInt32">
            <summary>Sets the shim of Unit.set_PlantID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.PlantSetPlant">
            <summary>Sets the shim of Unit.set_Plant(Plant value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.UnitAuxGet">
            <summary>Sets the shim of Unit.get_UnitAux()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.UnitAuxSetICollectionOfEQAuxilary">
            <summary>Sets the shim of Unit.set_UnitAux(ICollection`1&lt;EQAuxilary&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.UnitIDGet">
            <summary>Sets the shim of Unit.get_UnitID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.UnitIDSetInt32">
            <summary>Sets the shim of Unit.set_UnitID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.UnitLoopsGet">
            <summary>Sets the shim of Unit.get_UnitLoops()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.UnitLoopsSetICollectionOfEQControlLoop">
            <summary>Sets the shim of Unit.set_UnitLoops(ICollection`1&lt;EQControlLoop&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.UnitNameGet">
            <summary>Sets the shim of Unit.get_UnitName()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.UnitNameSetString">
            <summary>Sets the shim of Unit.set_UnitName(String value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.UnitVesselsGet">
            <summary>Sets the shim of Unit.get_UnitVessels()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.UnitVesselsSetICollectionOfEQVessel">
            <summary>Sets the shim of Unit.set_UnitVessels(ICollection`1&lt;EQVessel&gt; value)</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.ShimUnit.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.AllInstances.AvailableOperationsGet">
            <summary>Sets the shim of Unit.get_AvailableOperations()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.AllInstances.AvailableOperationsSetICollectionOfEQUnitOperation">
            <summary>Sets the shim of Unit.set_AvailableOperations(ICollection`1&lt;EQUnitOperation&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.AllInstances.CurrentBatchGet">
            <summary>Sets the shim of Unit.get_CurrentBatch()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.AllInstances.CurrentBatchSetBatch">
            <summary>Sets the shim of Unit.set_CurrentBatch(Batch value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.AllInstances.CurrentEQOperationGet">
            <summary>Sets the shim of Unit.get_CurrentEQOperation()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.AllInstances.CurrentEQOperationSetEQUnitOperation">
            <summary>Sets the shim of Unit.set_CurrentEQOperation(EQUnitOperation value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.AllInstances.InputUnitsGet">
            <summary>Sets the shim of Unit.get_InputUnits()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.AllInstances.InputUnitsSetICollectionOfUnit">
            <summary>Sets the shim of Unit.set_InputUnits(ICollection`1&lt;Unit&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.AllInstances.OutputUnitsGet">
            <summary>Sets the shim of Unit.get_OutputUnits()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.AllInstances.OutputUnitsSetICollectionOfUnit">
            <summary>Sets the shim of Unit.set_OutputUnits(ICollection`1&lt;Unit&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.AllInstances.PlantGet">
            <summary>Sets the shim of Unit.get_Plant()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.AllInstances.PlantIDGet">
            <summary>Sets the shim of Unit.get_PlantID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.AllInstances.PlantIDSetInt32">
            <summary>Sets the shim of Unit.set_PlantID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.AllInstances.PlantSetPlant">
            <summary>Sets the shim of Unit.set_Plant(Plant value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.AllInstances.UnitAuxGet">
            <summary>Sets the shim of Unit.get_UnitAux()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.AllInstances.UnitAuxSetICollectionOfEQAuxilary">
            <summary>Sets the shim of Unit.set_UnitAux(ICollection`1&lt;EQAuxilary&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.AllInstances.UnitIDGet">
            <summary>Sets the shim of Unit.get_UnitID()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.AllInstances.UnitIDSetInt32">
            <summary>Sets the shim of Unit.set_UnitID(Int32 value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.AllInstances.UnitLoopsGet">
            <summary>Sets the shim of Unit.get_UnitLoops()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.AllInstances.UnitLoopsSetICollectionOfEQControlLoop">
            <summary>Sets the shim of Unit.set_UnitLoops(ICollection`1&lt;EQControlLoop&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.AllInstances.UnitNameGet">
            <summary>Sets the shim of Unit.get_UnitName()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.AllInstances.UnitNameSetString">
            <summary>Sets the shim of Unit.set_UnitName(String value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.AllInstances.UnitVesselsGet">
            <summary>Sets the shim of Unit.get_UnitVessels()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.ShimUnit.AllInstances.UnitVesselsSetICollectionOfEQVessel">
            <summary>Sets the shim of Unit.set_UnitVessels(ICollection`1&lt;EQVessel&gt; value)</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.StubBaseEquip">
            <summary>Stub type of BrewMLLib.Models.BaseEquip</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubBaseEquip.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubBaseEquip.InitializeStub">
            <summary>Initializes a new instance of type StubBaseEquip</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubBaseEquip.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubBaseEquip.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubBaseEquip.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.StubBatch">
            <summary>Stub type of BrewMLLib.Models.Batch</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubBatch.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubBatch.AllocatedUnitsGet">
            <summary>Sets the stub of Batch.get_AllocatedUnits()</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubBatch.AllocatedUnitsSetICollectionOfUnit">
            <summary>Sets the stub of Batch.set_AllocatedUnits(ICollection`1&lt;Unit&gt; value)</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubBatch.AttachBackingFieldToAllocatedUnits">
            <summary>Attaches delegates to emulate StubBatch.AllocatedUnits as a property with a backing field.</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubBatch.InitializeStub">
            <summary>Initializes a new instance of type StubBatch</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubBatch.AllocatedUnits">
            <summary>Sets the stub of Batch.get_AllocatedUnits()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubBatch.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubBatch.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubBatch.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.StubCollectionOfTestEntitie">
            <summary>Stub type of BrewMLLib.Models.CollectionOfTestEntitie</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubCollectionOfTestEntitie.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubCollectionOfTestEntitie.InitializeStub">
            <summary>Initializes a new instance of type StubCollectionOfTestEntitie</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubCollectionOfTestEntitie.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubCollectionOfTestEntitie.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubCollectionOfTestEntitie.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.StubEQAuxilary">
            <summary>Stub type of BrewMLLib.Models.EQAuxilary</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubEQAuxilary.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubEQAuxilary.AttachBackingFieldToEQType">
            <summary>Attaches delegates to emulate StubEQAuxilary.EQType as a property with a backing field.</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubEQAuxilary.AttachBackingFieldToPlant">
            <summary>Attaches delegates to emulate StubEQAuxilary.Plant as a property with a backing field.</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubEQAuxilary.EQTypeGet">
            <summary>Sets the stub of EQAuxilary.get_EQType()</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubEQAuxilary.EQTypeSetEQType">
            <summary>Sets the stub of EQAuxilary.set_EQType(EQType value)</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubEQAuxilary.InitializeStub">
            <summary>Initializes a new instance of type StubEQAuxilary</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubEQAuxilary.PlantGet">
            <summary>Sets the stub of EQAuxilary.get_Plant()</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubEQAuxilary.PlantSetPlant">
            <summary>Sets the stub of EQAuxilary.set_Plant(Plant value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubEQAuxilary.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubEQAuxilary.EQType">
            <summary>Sets the stub of EQAuxilary.get_EQType()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubEQAuxilary.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubEQAuxilary.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubEQAuxilary.Plant">
            <summary>Sets the stub of EQAuxilary.get_Plant()</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.StubEQControlLoop">
            <summary>Stub type of BrewMLLib.Models.EQControlLoop</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubEQControlLoop.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubEQControlLoop.AttachBackingFieldToEQType">
            <summary>Attaches delegates to emulate StubEQControlLoop.EQType as a property with a backing field.</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubEQControlLoop.AttachBackingFieldToPlant">
            <summary>Attaches delegates to emulate StubEQControlLoop.Plant as a property with a backing field.</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubEQControlLoop.EQTypeGet">
            <summary>Sets the stub of EQControlLoop.get_EQType()</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubEQControlLoop.EQTypeSetEQType">
            <summary>Sets the stub of EQControlLoop.set_EQType(EQType value)</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubEQControlLoop.InitializeStub">
            <summary>Initializes a new instance of type StubEQControlLoop</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubEQControlLoop.PlantGet">
            <summary>Sets the stub of EQControlLoop.get_Plant()</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubEQControlLoop.PlantSetPlant">
            <summary>Sets the stub of EQControlLoop.set_Plant(Plant value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubEQControlLoop.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubEQControlLoop.EQType">
            <summary>Sets the stub of EQControlLoop.get_EQType()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubEQControlLoop.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubEQControlLoop.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubEQControlLoop.Plant">
            <summary>Sets the stub of EQControlLoop.get_Plant()</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.StubEQType">
            <summary>Stub type of BrewMLLib.Models.EQType</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubEQType.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubEQType.InitializeStub">
            <summary>Initializes a new instance of type StubEQType</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubEQType.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubEQType.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubEQType.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.StubEQUnitOperation">
            <summary>Stub type of BrewMLLib.Models.EQUnitOperation</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubEQUnitOperation.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubEQUnitOperation.AttachBackingFieldToUnitsThisOperationCanRunOn">
            <summary>Attaches delegates to emulate StubEQUnitOperation.UnitsThisOperationCanRunOn as a property with a backing field.</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubEQUnitOperation.InitializeStub">
            <summary>Initializes a new instance of type StubEQUnitOperation</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubEQUnitOperation.UnitsThisOperationCanRunOnGet">
            <summary>Sets the stub of EQUnitOperation.get_UnitsThisOperationCanRunOn()</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubEQUnitOperation.UnitsThisOperationCanRunOnSetICollectionOfUnit">
            <summary>Sets the stub of EQUnitOperation.set_UnitsThisOperationCanRunOn(ICollection`1&lt;Unit&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubEQUnitOperation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubEQUnitOperation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubEQUnitOperation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubEQUnitOperation.UnitsThisOperationCanRunOn">
            <summary>Sets the stub of EQUnitOperation.get_UnitsThisOperationCanRunOn()</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.StubEQVessel">
            <summary>Stub type of BrewMLLib.Models.EQVessel</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubEQVessel.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubEQVessel.AttachBackingFieldToEQType">
            <summary>Attaches delegates to emulate StubEQVessel.EQType as a property with a backing field.</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubEQVessel.AttachBackingFieldToPlant">
            <summary>Attaches delegates to emulate StubEQVessel.Plant as a property with a backing field.</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubEQVessel.EQTypeGet">
            <summary>Sets the stub of EQVessel.get_EQType()</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubEQVessel.EQTypeSetEQType">
            <summary>Sets the stub of EQVessel.set_EQType(EQType value)</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubEQVessel.InitializeStub">
            <summary>Initializes a new instance of type StubEQVessel</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubEQVessel.PlantGet">
            <summary>Sets the stub of EQVessel.get_Plant()</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubEQVessel.PlantSetPlant">
            <summary>Sets the stub of EQVessel.set_Plant(Plant value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubEQVessel.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubEQVessel.EQType">
            <summary>Sets the stub of EQVessel.get_EQType()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubEQVessel.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubEQVessel.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubEQVessel.Plant">
            <summary>Sets the stub of EQVessel.get_Plant()</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.StubIFluentTest">
            <summary>Stub type of BrewMLLib.Models.IFluentTest</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubIFluentTest.#ctor">
            <summary>Initializes a new instance of type StubIFluentTest</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubIFluentTest.bmll::BrewMLLib#Models#IFluentTest#SetTestInt(System.Int32)">
            <summary>Sets the stub of IFluentTest.SetTestInt(Int32 s)</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubIFluentTest.bmll::BrewMLLib#Models#IFluentTest#SetTestString(System.String)">
            <summary>Sets the stub of IFluentTest.SetTestString(String d)</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubIFluentTest.SetTestIntInt32">
            <summary>Sets the stub of IFluentTest.SetTestInt(Int32 s)</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubIFluentTest.SetTestStringString">
            <summary>Sets the stub of IFluentTest.SetTestString(String d)</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.StubIngredient">
            <summary>Stub type of BrewMLLib.Models.Ingredient</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubIngredient.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubIngredient.AttachBackingFieldToIngredientType">
            <summary>Attaches delegates to emulate StubIngredient.IngredientType as a property with a backing field.</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubIngredient.IngredientTypeGet">
            <summary>Sets the stub of Ingredient.get_IngredientType()</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubIngredient.IngredientTypeSetIngredientType">
            <summary>Sets the stub of Ingredient.set_IngredientType(IngredientType value)</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubIngredient.InitializeStub">
            <summary>Initializes a new instance of type StubIngredient</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubIngredient.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubIngredient.IngredientType">
            <summary>Sets the stub of Ingredient.get_IngredientType()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubIngredient.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubIngredient.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.StubIngredientType">
            <summary>Stub type of BrewMLLib.Models.IngredientType</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubIngredientType.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubIngredientType.InitializeStub">
            <summary>Initializes a new instance of type StubIngredientType</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubIngredientType.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubIngredientType.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubIngredientType.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.StubMasterRecipe">
            <summary>Stub type of BrewMLLib.Models.MasterRecipe</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubMasterRecipe.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubMasterRecipe.AttachBackingFieldToIngredients">
            <summary>Attaches delegates to emulate StubMasterRecipe.Ingredients as a property with a backing field.</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubMasterRecipe.AttachBackingFieldToPlants">
            <summary>Attaches delegates to emulate StubMasterRecipe.Plants as a property with a backing field.</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubMasterRecipe.AttachBackingFieldToRecOperations">
            <summary>Attaches delegates to emulate StubMasterRecipe.RecOperations as a property with a backing field.</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubMasterRecipe.IngredientsGet">
            <summary>Sets the stub of MasterRecipe.get_Ingredients()</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubMasterRecipe.IngredientsSetICollectionOfIngredient">
            <summary>Sets the stub of MasterRecipe.set_Ingredients(ICollection`1&lt;Ingredient&gt; value)</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubMasterRecipe.InitializeStub">
            <summary>Initializes a new instance of type StubMasterRecipe</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubMasterRecipe.PlantsGet">
            <summary>Sets the stub of MasterRecipe.get_Plants()</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubMasterRecipe.PlantsSetICollectionOfPlant">
            <summary>Sets the stub of MasterRecipe.set_Plants(ICollection`1&lt;Plant&gt; value)</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubMasterRecipe.RecOperationsGet">
            <summary>Sets the stub of MasterRecipe.get_RecOperations()</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubMasterRecipe.RecOperationsSetICollectionOfRecUnitOperation">
            <summary>Sets the stub of MasterRecipe.set_RecOperations(ICollection`1&lt;RecUnitOperation&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubMasterRecipe.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubMasterRecipe.Ingredients">
            <summary>Sets the stub of MasterRecipe.get_Ingredients()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubMasterRecipe.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubMasterRecipe.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubMasterRecipe.Plants">
            <summary>Sets the stub of MasterRecipe.get_Plants()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubMasterRecipe.RecOperations">
            <summary>Sets the stub of MasterRecipe.get_RecOperations()</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.StubPlant">
            <summary>Stub type of BrewMLLib.Models.Plant</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubPlant.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubPlant.AttachBackingFieldToPlantAux">
            <summary>Attaches delegates to emulate StubPlant.PlantAux as a property with a backing field.</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubPlant.AttachBackingFieldToPlantLoops">
            <summary>Attaches delegates to emulate StubPlant.PlantLoops as a property with a backing field.</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubPlant.AttachBackingFieldToPlantVessels">
            <summary>Attaches delegates to emulate StubPlant.PlantVessels as a property with a backing field.</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubPlant.AttachBackingFieldToThisPlantsBrands">
            <summary>Attaches delegates to emulate StubPlant.ThisPlantsBrands as a property with a backing field.</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubPlant.AttachBackingFieldToUnits">
            <summary>Attaches delegates to emulate StubPlant.Units as a property with a backing field.</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubPlant.InitializeStub">
            <summary>Initializes a new instance of type StubPlant</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubPlant.PlantAuxGet">
            <summary>Sets the stub of Plant.get_PlantAux()</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubPlant.PlantAuxSetICollectionOfEQAuxilary">
            <summary>Sets the stub of Plant.set_PlantAux(ICollection`1&lt;EQAuxilary&gt; value)</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubPlant.PlantLoopsGet">
            <summary>Sets the stub of Plant.get_PlantLoops()</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubPlant.PlantLoopsSetICollectionOfEQControlLoop">
            <summary>Sets the stub of Plant.set_PlantLoops(ICollection`1&lt;EQControlLoop&gt; value)</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubPlant.PlantVesselsGet">
            <summary>Sets the stub of Plant.get_PlantVessels()</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubPlant.PlantVesselsSetICollectionOfEQVessel">
            <summary>Sets the stub of Plant.set_PlantVessels(ICollection`1&lt;EQVessel&gt; value)</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubPlant.ThisPlantsBrandsGet">
            <summary>Sets the stub of Plant.get_ThisPlantsBrands()</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubPlant.ThisPlantsBrandsSetICollectionOfMasterRecipe">
            <summary>Sets the stub of Plant.set_ThisPlantsBrands(ICollection`1&lt;MasterRecipe&gt; value)</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubPlant.UnitsGet">
            <summary>Sets the stub of Plant.get_Units()</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubPlant.UnitsSetICollectionOfUnit">
            <summary>Sets the stub of Plant.set_Units(ICollection`1&lt;Unit&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubPlant.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubPlant.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubPlant.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubPlant.PlantAux">
            <summary>Sets the stub of Plant.get_PlantAux()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubPlant.PlantLoops">
            <summary>Sets the stub of Plant.get_PlantLoops()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubPlant.PlantVessels">
            <summary>Sets the stub of Plant.get_PlantVessels()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubPlant.ThisPlantsBrands">
            <summary>Sets the stub of Plant.get_ThisPlantsBrands()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubPlant.Units">
            <summary>Sets the stub of Plant.get_Units()</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.StubRecUnitOperation">
            <summary>Stub type of BrewMLLib.Models.RecUnitOperation</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubRecUnitOperation.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubRecUnitOperation.AllowedUnitsGet">
            <summary>Sets the stub of RecUnitOperation.get_AllowedUnits()</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubRecUnitOperation.AllowedUnitsSetICollectionOfUnit">
            <summary>Sets the stub of RecUnitOperation.set_AllowedUnits(ICollection`1&lt;Unit&gt; value)</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubRecUnitOperation.AttachBackingFieldToAllowedUnits">
            <summary>Attaches delegates to emulate StubRecUnitOperation.AllowedUnits as a property with a backing field.</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubRecUnitOperation.InitializeStub">
            <summary>Initializes a new instance of type StubRecUnitOperation</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubRecUnitOperation.AllowedUnits">
            <summary>Sets the stub of RecUnitOperation.get_AllowedUnits()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubRecUnitOperation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubRecUnitOperation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubRecUnitOperation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.StubTestEntitie">
            <summary>Stub type of BrewMLLib.Models.TestEntitie</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubTestEntitie.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubTestEntitie.InitializeStub">
            <summary>Initializes a new instance of type StubTestEntitie</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubTestEntitie.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubTestEntitie.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubTestEntitie.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.StubTestEntitieBuilder">
            <summary>Stub type of BrewMLLib.Models.TestEntitieBuilder</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubTestEntitieBuilder.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubTestEntitieBuilder.InitializeStub">
            <summary>Initializes a new instance of type StubTestEntitieBuilder</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubTestEntitieBuilder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubTestEntitieBuilder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubTestEntitieBuilder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.StubTestEntitieTwo">
            <summary>Stub type of BrewMLLib.Models.TestEntitieTwo</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubTestEntitieTwo.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubTestEntitieTwo.#ctor(System.String,System.Int32,System.Single)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubTestEntitieTwo.InitializeStub">
            <summary>Initializes a new instance of type StubTestEntitieTwo</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubTestEntitieTwo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubTestEntitieTwo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubTestEntitieTwo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.StubTransition">
            <summary>Stub type of BrewMLLib.Models.Transition</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubTransition.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubTransition.InitializeStub">
            <summary>Initializes a new instance of type StubTransition</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubTransition.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubTransition.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubTransition.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:BrewMLLib.Models.Fakes.StubUnit">
            <summary>Stub type of BrewMLLib.Models.Unit</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubUnit.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubUnit.AttachBackingFieldToAvailableOperations">
            <summary>Attaches delegates to emulate StubUnit.AvailableOperations as a property with a backing field.</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubUnit.AttachBackingFieldToInputUnits">
            <summary>Attaches delegates to emulate StubUnit.InputUnits as a property with a backing field.</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubUnit.AttachBackingFieldToOutputUnits">
            <summary>Attaches delegates to emulate StubUnit.OutputUnits as a property with a backing field.</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubUnit.AttachBackingFieldToPlant">
            <summary>Attaches delegates to emulate StubUnit.Plant as a property with a backing field.</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubUnit.AttachBackingFieldToUnitAux">
            <summary>Attaches delegates to emulate StubUnit.UnitAux as a property with a backing field.</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubUnit.AttachBackingFieldToUnitLoops">
            <summary>Attaches delegates to emulate StubUnit.UnitLoops as a property with a backing field.</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubUnit.AttachBackingFieldToUnitVessels">
            <summary>Attaches delegates to emulate StubUnit.UnitVessels as a property with a backing field.</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubUnit.AvailableOperationsGet">
            <summary>Sets the stub of Unit.get_AvailableOperations()</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubUnit.AvailableOperationsSetICollectionOfEQUnitOperation">
            <summary>Sets the stub of Unit.set_AvailableOperations(ICollection`1&lt;EQUnitOperation&gt; value)</summary>
        </member>
        <member name="M:BrewMLLib.Models.Fakes.StubUnit.InitializeStub">
            <summary>Initializes a new instance of type StubUnit</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubUnit.InputUnitsGet">
            <summary>Sets the stub of Unit.get_InputUnits()</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubUnit.InputUnitsSetICollectionOfUnit">
            <summary>Sets the stub of Unit.set_InputUnits(ICollection`1&lt;Unit&gt; value)</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubUnit.OutputUnitsGet">
            <summary>Sets the stub of Unit.get_OutputUnits()</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubUnit.OutputUnitsSetICollectionOfUnit">
            <summary>Sets the stub of Unit.set_OutputUnits(ICollection`1&lt;Unit&gt; value)</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubUnit.PlantGet">
            <summary>Sets the stub of Unit.get_Plant()</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubUnit.PlantSetPlant">
            <summary>Sets the stub of Unit.set_Plant(Plant value)</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubUnit.UnitAuxGet">
            <summary>Sets the stub of Unit.get_UnitAux()</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubUnit.UnitAuxSetICollectionOfEQAuxilary">
            <summary>Sets the stub of Unit.set_UnitAux(ICollection`1&lt;EQAuxilary&gt; value)</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubUnit.UnitLoopsGet">
            <summary>Sets the stub of Unit.get_UnitLoops()</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubUnit.UnitLoopsSetICollectionOfEQControlLoop">
            <summary>Sets the stub of Unit.set_UnitLoops(ICollection`1&lt;EQControlLoop&gt; value)</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubUnit.UnitVesselsGet">
            <summary>Sets the stub of Unit.get_UnitVessels()</summary>
        </member>
        <member name="F:BrewMLLib.Models.Fakes.StubUnit.UnitVesselsSetICollectionOfEQVessel">
            <summary>Sets the stub of Unit.set_UnitVessels(ICollection`1&lt;EQVessel&gt; value)</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubUnit.AvailableOperations">
            <summary>Sets the stub of Unit.get_AvailableOperations()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubUnit.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubUnit.InputUnits">
            <summary>Sets the stub of Unit.get_InputUnits()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubUnit.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubUnit.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubUnit.OutputUnits">
            <summary>Sets the stub of Unit.get_OutputUnits()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubUnit.Plant">
            <summary>Sets the stub of Unit.get_Plant()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubUnit.UnitAux">
            <summary>Sets the stub of Unit.get_UnitAux()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubUnit.UnitLoops">
            <summary>Sets the stub of Unit.get_UnitLoops()</summary>
        </member>
        <member name="P:BrewMLLib.Models.Fakes.StubUnit.UnitVessels">
            <summary>Sets the stub of Unit.get_UnitVessels()</summary>
        </member>
    </members>
</doc>
