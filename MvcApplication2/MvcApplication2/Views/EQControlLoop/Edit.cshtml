@model MvcApplication2.Models.EQControlLoop

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>EQControlLoop</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.TagName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.TagName)
            @Html.ValidationMessageFor(model => model.TagName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.MeasuredValue)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.MeasuredValue)
            @Html.ValidationMessageFor(model => model.MeasuredValue)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SetPoint)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SetPoint)
            @Html.ValidationMessageFor(model => model.SetPoint)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Output)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Output)
            @Html.ValidationMessageFor(model => model.Output)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.HIHIAlarm)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.HIHIAlarm)
            @Html.ValidationMessageFor(model => model.HIHIAlarm)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.HIAlarm)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.HIAlarm)
            @Html.ValidationMessageFor(model => model.HIAlarm)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LOAlarm)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LOAlarm)
            @Html.ValidationMessageFor(model => model.LOAlarm)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LOLOAlarm)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LOLOAlarm)
            @Html.ValidationMessageFor(model => model.LOLOAlarm)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ReverseActing)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ReverseActing)
            @Html.ValidationMessageFor(model => model.ReverseActing)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SimMeasValue)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SimMeasValue)
            @Html.ValidationMessageFor(model => model.SimMeasValue)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.EnableTrending)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EnableTrending)
            @Html.ValidationMessageFor(model => model.EnableTrending)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PlantID, "Plant")
        </div>
        <div class="editor-field">
            @Html.DropDownList("PlantID", String.Empty)
            @Html.ValidationMessageFor(model => model.PlantID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.EQTypeID, "EQType")
        </div>
        <div class="editor-field">
            @Html.DropDownList("EQTypeID", String.Empty)
            @Html.ValidationMessageFor(model => model.EQTypeID)
        </div>

        @Html.HiddenFor(model => model.BaseEquipID)

        <div class="editor-label">
            @Html.LabelFor(model => model.EquipName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EquipName)
            @Html.ValidationMessageFor(model => model.EquipName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.AssetTag)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.AssetTag)
            @Html.ValidationMessageFor(model => model.AssetTag)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
